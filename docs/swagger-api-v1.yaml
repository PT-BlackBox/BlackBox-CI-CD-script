openapi: 3.0.0
info:
  title: 'BlackBox CI/CD API v.1.0'
  description: BlackBox API spec
  version: 3.0
  contact:
    name: API Support
    email: feedback.bbs@ptsecurity.com
security:
  - apiToken: []
servers:
  - url: /
paths:
  /api/v1/api-profiles/{profile_uuid}/clone:
    post:
      tags:
        - v1-api-profile
      summary: Clone
      operationId: ApiV1ApiProfilesProfileUuidCloneClone
      parameters:
        - name: profile_uuid
          in: path
          schema:
            type: string
            format: uuid
          required: true
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
        - name: authorization
          in: header
          schema:
            type: string
          required: true
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIProfileShortInfoSchema'
        '400':
          description: Bad request syntax or unsupported method
          content:
            application/json:
              schema:
                properties:
                  status_code:
                    type: integer
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                      - 'null'
                      - object
                      - array
                type: object
                required:
                  - detail
                  - status_code
                description: Validation Exception
                examples:
                  - status_code: 400
                    detail: Bad Request
                    extra: {}
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaRoleAttributeDescriptionSchema'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaNoneType'
      deprecated: false
  /api/v1/api-profiles:
    get:
      tags:
        - v1-api-profile
      summary: GetAll
      operationId: ApiV1ApiProfilesGetAll
      parameters:
        - name: authorization
          in: header
          schema:
            type: string
          required: true
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
      responses:
        '200':
          description: Request fulfilled, document follows
          headers: {}
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/APIProfileShortInfoSchema'
                type: array
        '400':
          description: Bad request syntax or unsupported method
          content:
            application/json:
              schema:
                properties:
                  status_code:
                    type: integer
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                      - 'null'
                      - object
                      - array
                type: object
                required:
                  - detail
                  - status_code
                description: Validation Exception
                examples:
                  - status_code: 400
                    detail: Bad Request
                    extra: {}
      deprecated: false
    post:
      tags:
        - v1-api-profile
      summary: Create
      operationId: ApiV1ApiProfilesCreate
      parameters:
        - name: authorization
          in: header
          schema:
            type: string
          required: true
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewAPIProfileSchema'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIProfileShortInfoSchema'
        '400':
          description: Bad request syntax or unsupported method
          content:
            application/json:
              schema:
                properties:
                  status_code:
                    type: integer
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                      - 'null'
                      - object
                      - array
                type: object
                required:
                  - detail
                  - status_code
                description: Validation Exception
                examples:
                  - status_code: 400
                    detail: Bad Request
                    extra: {}
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaRoleAttributeDescriptionSchema'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaNoneType'
        '422':
          description: Invalid data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaNoneType'
      deprecated: false
  /api/v1/api-profiles/{profile_uuid}:
    get:
      tags:
        - v1-api-profile
      summary: Get
      operationId: ApiV1ApiProfilesProfileUuidGet
      parameters:
        - name: profile_uuid
          in: path
          schema:
            type: string
            format: uuid
          required: true
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
        - name: authorization
          in: header
          schema:
            type: string
          required: true
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
      responses:
        '200':
          description: Request fulfilled, document follows
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIProfileSchema'
        '400':
          description: Bad request syntax or unsupported method
          content:
            application/json:
              schema:
                properties:
                  status_code:
                    type: integer
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                      - 'null'
                      - object
                      - array
                type: object
                required:
                  - detail
                  - status_code
                description: Validation Exception
                examples:
                  - status_code: 400
                    detail: Bad Request
                    extra: {}
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaNoneType'
      deprecated: false
    delete:
      tags:
        - v1-api-profile
      summary: Delete
      operationId: ApiV1ApiProfilesProfileUuidDelete
      parameters:
        - name: profile_uuid
          in: path
          schema:
            type: string
            format: uuid
          required: true
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
        - name: authorization
          in: header
          schema:
            type: string
          required: true
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
      responses:
        '204':
          description: Deleted
        '400':
          description: Bad request syntax or unsupported method
          content:
            application/json:
              schema:
                properties:
                  status_code:
                    type: integer
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                      - 'null'
                      - object
                      - array
                type: object
                required:
                  - detail
                  - status_code
                description: Validation Exception
                examples:
                  - status_code: 400
                    detail: Bad Request
                    extra: {}
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaRoleAttributeDescriptionSchema'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaAPIProfilesConflicts'
      deprecated: false
    patch:
      tags:
        - v1-api-profile
      summary: Update
      operationId: ApiV1ApiProfilesProfileUuidUpdate
      parameters:
        - name: profile_uuid
          in: path
          schema:
            type: string
            format: uuid
          required: true
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
        - name: authorization
          in: header
          schema:
            type: string
          required: true
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAPIProfileSchema'
        required: true
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIProfileShortInfoSchema'
        '400':
          description: Bad request syntax or unsupported method
          content:
            application/json:
              schema:
                properties:
                  status_code:
                    type: integer
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                      - 'null'
                      - object
                      - array
                type: object
                required:
                  - detail
                  - status_code
                description: Validation Exception
                examples:
                  - status_code: 400
                    detail: Bad Request
                    extra: {}
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaRoleAttributeDescriptionSchema'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaNoneType'
        '422':
          description: Invalid data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaNoneType'
      deprecated: false
  /api/v1/auth-chains/{auth_chain_uuid}/clone:
    post:
      tags:
        - v1-auth-chain
      summary: Clone
      operationId: ApiV1AuthChainsAuthChainUuidCloneClone
      parameters:
        - name: auth_chain_uuid
          in: path
          schema:
            type: string
            format: uuid
          required: true
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthChainShortInfoSchema'
        '400':
          description: Bad request syntax or unsupported method
          content:
            application/json:
              schema:
                properties:
                  status_code:
                    type: integer
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                      - 'null'
                      - object
                      - array
                type: object
                required:
                  - detail
                  - status_code
                description: Validation Exception
                examples:
                  - status_code: 400
                    detail: Bad Request
                    extra: {}
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaRoleAttributeDescriptionSchema'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaNoneType'
      deprecated: false
  /api/v1/auth-chains:
    get:
      tags:
        - v1-auth-chain
      summary: GetAll
      operationId: ApiV1AuthChainsGetAll
      responses:
        '200':
          description: Request fulfilled, document follows
          headers: {}
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AuthChainShortInfoSchema'
                type: array
      deprecated: false
    post:
      tags:
        - v1-auth-chain
      summary: Create
      operationId: ApiV1AuthChainsCreate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthChainCreateSchema'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthChainShortInfoSchema'
        '400':
          description: Bad request syntax or unsupported method
          content:
            application/json:
              schema:
                properties:
                  status_code:
                    type: integer
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                      - 'null'
                      - object
                      - array
                type: object
                required:
                  - detail
                  - status_code
                description: Validation Exception
                examples:
                  - status_code: 400
                    detail: Bad Request
                    extra: {}
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaRoleAttributeDescriptionSchema'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaNoneType'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaNoneType'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaAuthProfilesNotFoundUUIDs'
      deprecated: false
  /api/v1/auth-chains/{auth_chain_uuid}:
    get:
      tags:
        - v1-auth-chain
      summary: Get
      operationId: ApiV1AuthChainsAuthChainUuidGet
      parameters:
        - name: auth_chain_uuid
          in: path
          schema:
            type: string
            format: uuid
          required: true
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
      responses:
        '200':
          description: Request fulfilled, document follows
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthChainFullInfoSchema'
        '400':
          description: Bad request syntax or unsupported method
          content:
            application/json:
              schema:
                properties:
                  status_code:
                    type: integer
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                      - 'null'
                      - object
                      - array
                type: object
                required:
                  - detail
                  - status_code
                description: Validation Exception
                examples:
                  - status_code: 400
                    detail: Bad Request
                    extra: {}
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaNoneType'
      deprecated: false
    delete:
      tags:
        - v1-auth-chain
      summary: Delete
      operationId: ApiV1AuthChainsAuthChainUuidDelete
      parameters:
        - name: auth_chain_uuid
          in: path
          schema:
            type: string
            format: uuid
          required: true
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
      responses:
        '204':
          description: Deleted
        '400':
          description: Bad request syntax or unsupported method
          content:
            application/json:
              schema:
                properties:
                  status_code:
                    type: integer
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                      - 'null'
                      - object
                      - array
                type: object
                required:
                  - detail
                  - status_code
                description: Validation Exception
                examples:
                  - status_code: 400
                    detail: Bad Request
                    extra: {}
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaRoleAttributeDescriptionSchema'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaAuthChainsConflicts'
      deprecated: false
    patch:
      tags:
        - v1-auth-chain
      summary: Update
      operationId: ApiV1AuthChainsAuthChainUuidUpdate
      parameters:
        - name: auth_chain_uuid
          in: path
          schema:
            type: string
            format: uuid
          required: true
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthChainUpdateSchema'
        required: true
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthChainShortInfoSchema'
        '400':
          description: Bad request syntax or unsupported method
          content:
            application/json:
              schema:
                properties:
                  status_code:
                    type: integer
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                      - 'null'
                      - object
                      - array
                type: object
                required:
                  - detail
                  - status_code
                description: Validation Exception
                examples:
                  - status_code: 400
                    detail: Bad Request
                    extra: {}
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaNoneType'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaNoneType'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaNoneType'
      deprecated: false
  /api/v1/auth-profiles/{auth_profile_uuid}/clone:
    post:
      tags:
        - v1-auth-profile
      summary: Clone
      operationId: ApiV1AuthProfilesAuthProfileUuidCloneClone
      parameters:
        - name: auth_profile_uuid
          in: path
          schema:
            type: string
            format: uuid
          required: true
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
        - name: authorization
          in: header
          schema:
            type: string
          required: true
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthProfileShortInfoSchema'
        '400':
          description: Bad request syntax or unsupported method
          content:
            application/json:
              schema:
                properties:
                  status_code:
                    type: integer
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                      - 'null'
                      - object
                      - array
                type: object
                required:
                  - detail
                  - status_code
                description: Validation Exception
                examples:
                  - status_code: 400
                    detail: Bad Request
                    extra: {}
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaRoleAttributeDescriptionSchema'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaNoneType'
      deprecated: false
  /api/v1/auth-profiles/{auth_profile_uuid}:
    get:
      tags:
        - v1-auth-profile
      summary: Get
      operationId: ApiV1AuthProfilesAuthProfileUuidGet
      parameters:
        - name: auth_profile_uuid
          in: path
          schema:
            type: string
            format: uuid
          required: true
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
        - name: authorization
          in: header
          schema:
            type: string
          required: true
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
      responses:
        '200':
          description: Request fulfilled, document follows
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthProfileFullInfoSchema'
        '400':
          description: Bad request syntax or unsupported method
          content:
            application/json:
              schema:
                properties:
                  status_code:
                    type: integer
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                      - 'null'
                      - object
                      - array
                type: object
                required:
                  - detail
                  - status_code
                description: Validation Exception
                examples:
                  - status_code: 400
                    detail: Bad Request
                    extra: {}
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaNoneType'
      deprecated: false
    delete:
      tags:
        - v1-auth-profile
      summary: Delete
      operationId: ApiV1AuthProfilesAuthProfileUuidDelete
      parameters:
        - name: auth_profile_uuid
          in: path
          schema:
            type: string
            format: uuid
          required: true
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
        - name: authorization
          in: header
          schema:
            type: string
          required: true
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
      responses:
        '204':
          description: Request fulfilled, nothing follows
          headers: {}
        '400':
          description: Bad request syntax or unsupported method
          content:
            application/json:
              schema:
                properties:
                  status_code:
                    type: integer
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                      - 'null'
                      - object
                      - array
                type: object
                required:
                  - detail
                  - status_code
                description: Validation Exception
                examples:
                  - status_code: 400
                    detail: Bad Request
                    extra: {}
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaRoleAttributeDescriptionSchema'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaNoneType'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaAuthProfilesConflicts'
      deprecated: false
    patch:
      tags:
        - v1-auth-profile
      summary: Patch
      operationId: ApiV1AuthProfilesAuthProfileUuidPatch
      parameters:
        - name: auth_profile_uuid
          in: path
          schema:
            type: string
            format: uuid
          required: true
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
        - name: authorization
          in: header
          schema:
            type: string
          required: true
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthProfileUpdateSchema'
        required: true
      responses:
        '200':
          description: Request fulfilled, document follows
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthProfileShortInfoSchema'
        '400':
          description: Bad request syntax or unsupported method
          content:
            application/json:
              schema:
                properties:
                  status_code:
                    type: integer
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                      - 'null'
                      - object
                      - array
                type: object
                required:
                  - detail
                  - status_code
                description: Validation Exception
                examples:
                  - status_code: 400
                    detail: Bad Request
                    extra: {}
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaRoleAttributeDescriptionSchema'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaNoneType'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaNoneType'
      deprecated: false
  /api/v1/auth-profiles:
    get:
      tags:
        - v1-auth-profile
      summary: GetAll
      operationId: ApiV1AuthProfilesGetAll
      parameters:
        - name: authorization
          in: header
          schema:
            type: string
          required: true
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
      responses:
        '200':
          description: Request fulfilled, document follows
          headers: {}
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AuthProfileShortInfoSchema'
                type: array
        '400':
          description: Bad request syntax or unsupported method
          content:
            application/json:
              schema:
                properties:
                  status_code:
                    type: integer
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                      - 'null'
                      - object
                      - array
                type: object
                required:
                  - detail
                  - status_code
                description: Validation Exception
                examples:
                  - status_code: 400
                    detail: Bad Request
                    extra: {}
      deprecated: false
    post:
      tags:
        - v1-auth-profile
      summary: Post
      operationId: ApiV1AuthProfilesPost
      parameters:
        - name: authorization
          in: header
          schema:
            type: string
          required: true
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthProfileCreateSchema'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthProfileShortInfoSchema'
        '400':
          description: Bad request syntax or unsupported method
          content:
            application/json:
              schema:
                properties:
                  status_code:
                    type: integer
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                      - 'null'
                      - object
                      - array
                type: object
                required:
                  - detail
                  - status_code
                description: Validation Exception
                examples:
                  - status_code: 400
                    detail: Bad Request
                    extra: {}
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaRoleAttributeDescriptionSchema'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaNoneType'
      deprecated: false
  /api/v1/groups:
    get:
      tags:
        - v1-group
      summary: GetAll
      operationId: ApiV1GroupsGetAll
      parameters:
        - name: by_name
          in: query
          schema:
            oneOf:
              - type: 'null'
              - type: string
          required: false
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
        - name: by_role
          in: query
          schema:
            oneOf:
              - type: 'null'
              - type: string
          required: false
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
        - name: authorization
          in: header
          schema:
            type: string
          required: true
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
      responses:
        '200':
          description: Request fulfilled, document follows
          headers: {}
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GroupRoleInfoSchema'
                type: array
        '400':
          description: Bad request syntax or unsupported method
          content:
            application/json:
              schema:
                properties:
                  status_code:
                    type: integer
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                      - 'null'
                      - object
                      - array
                type: object
                required:
                  - detail
                  - status_code
                description: Validation Exception
                examples:
                  - status_code: 400
                    detail: Bad Request
                    extra: {}
      deprecated: false
    post:
      tags:
        - v1-group
      summary: Create
      operationId: ApiV1GroupsCreate
      parameters:
        - name: authorization
          in: header
          schema:
            type: string
          required: true
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupNewSchema'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupShortInfoSchema'
        '400':
          description: Bad request syntax or unsupported method
          content:
            application/json:
              schema:
                properties:
                  status_code:
                    type: integer
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                      - 'null'
                      - object
                      - array
                type: object
                required:
                  - detail
                  - status_code
                description: Validation Exception
                examples:
                  - status_code: 400
                    detail: Bad Request
                    extra: {}
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaRoleAttributeDescriptionSchema'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaNoneType'
      deprecated: false
  /api/v1/groups/{group_uuid}:
    get:
      tags:
        - v1-group
      summary: Get
      operationId: ApiV1GroupsGroupUuidGet
      parameters:
        - name: group_uuid
          in: path
          schema:
            type: string
            format: uuid
          required: true
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
        - name: authorization
          in: header
          schema:
            type: string
          required: true
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
      responses:
        '200':
          description: Request fulfilled, document follows
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupRoleFullInfoSchema'
        '400':
          description: Bad request syntax or unsupported method
          content:
            application/json:
              schema:
                properties:
                  status_code:
                    type: integer
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                      - 'null'
                      - object
                      - array
                type: object
                required:
                  - detail
                  - status_code
                description: Validation Exception
                examples:
                  - status_code: 400
                    detail: Bad Request
                    extra: {}
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaNoneType'
      deprecated: false
  /api/v1/groups/{group_uuid}/permissions:
    get:
      tags:
        - v1-group
      summary: GetPermissions
      operationId: ApiV1GroupsGroupUuidPermissionsGetPermissions
      parameters:
        - name: group_uuid
          in: path
          schema:
            type: string
            format: uuid
          required: true
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
        - name: authorization
          in: header
          schema:
            type: string
          required: true
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
      responses:
        '200':
          description: Request fulfilled, document follows
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupRolePermissionsSchema'
        '400':
          description: Bad request syntax or unsupported method
          content:
            application/json:
              schema:
                properties:
                  status_code:
                    type: integer
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                      - 'null'
                      - object
                      - array
                type: object
                required:
                  - detail
                  - status_code
                description: Validation Exception
                examples:
                  - status_code: 400
                    detail: Bad Request
                    extra: {}
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaNoneType'
      deprecated: false
  /api/v1/groups/roles/list:
    get:
      tags:
        - v1-group
      summary: GetRoles
      operationId: ApiV1GroupsRolesListGetRoles
      parameters:
        - name: authorization
          in: header
          schema:
            type: string
          required: true
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
      responses:
        '200':
          description: Request fulfilled, document follows
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolesListSchema'
        '400':
          description: Bad request syntax or unsupported method
          content:
            application/json:
              schema:
                properties:
                  status_code:
                    type: integer
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                      - 'null'
                      - object
                      - array
                type: object
                required:
                  - detail
                  - status_code
                description: Validation Exception
                examples:
                  - status_code: 400
                    detail: Bad Request
                    extra: {}
      deprecated: false
  /api/v1/sites/{site_uuid}/scans/{scan_iid}:
    get:
      tags:
        - v1-scan
      summary: Info
      operationId: ApiV1SitesSiteUuidScansScanIidInfo
      parameters:
        - name: site_uuid
          in: path
          schema:
            type: string
            format: uuid
          required: true
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
        - name: scan_iid
          in: path
          schema:
            type: integer
          required: true
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
      responses:
        '200':
          description: Request fulfilled, document follows
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanQueueProfilesSchema'
        '400':
          description: Bad request syntax or unsupported method
          content:
            application/json:
              schema:
                properties:
                  status_code:
                    type: integer
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                      - 'null'
                      - object
                      - array
                type: object
                required:
                  - detail
                  - status_code
                description: Validation Exception
                examples:
                  - status_code: 400
                    detail: Bad Request
                    extra: {}
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaRoleAttributeDescriptionSchema'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaNoneType'
      deprecated: false
  /api/v1/sites/{site_uuid}/start:
    post:
      tags:
        - v1-scan
      summary: Start
      operationId: ApiV1SitesSiteUuidStartStart
      parameters:
        - name: site_uuid
          in: path
          schema:
            type: string
            format: uuid
          required: true
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
      responses:
        '202':
          description: Request accepted, processing continues off-line
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanQueueProfilesSchema'
        '400':
          description: Bad request syntax or unsupported method
          content:
            application/json:
              schema:
                properties:
                  status_code:
                    type: integer
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                      - 'null'
                      - object
                      - array
                type: object
                required:
                  - detail
                  - status_code
                description: Validation Exception
                examples:
                  - status_code: 400
                    detail: Bad Request
                    extra: {}
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ErrorSchemaRoleAttributeDescriptionSchemaNone
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaNoneType'
        '503':
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaNoneType'
      deprecated: false
  /api/v1/sites/{site_uuid}/stop:
    post:
      tags:
        - v1-scan
      summary: Stop
      operationId: ApiV1SitesSiteUuidStopStop
      parameters:
        - name: site_uuid
          in: path
          schema:
            type: string
            format: uuid
          required: true
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
      responses:
        '204':
          description: Request fulfilled, nothing follows
          headers: {}
        '400':
          description: Bad request syntax or unsupported method
          content:
            application/json:
              schema:
                properties:
                  status_code:
                    type: integer
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                      - 'null'
                      - object
                      - array
                type: object
                required:
                  - detail
                  - status_code
                description: Validation Exception
                examples:
                  - status_code: 400
                    detail: Bad Request
                    extra: {}
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: >-
                  #/components/schemas/ErrorSchemaRoleAttributeDescriptionSchemaNone
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaNoneType'
        '503':
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaNoneType'
      deprecated: false
  /api/v1/sites/{site_uuid}/scans/{scan_iid}/shared:
    get:
      tags:
        - v1-shared-link
      summary: GetAll
      operationId: ApiV1SitesSiteUuidScansScanIidSharedGetAll
      parameters:
        - name: site_uuid
          in: path
          schema:
            type: string
            format: uuid
          required: true
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
        - name: scan_iid
          in: path
          schema:
            type: integer
          required: true
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
      responses:
        '200':
          description: Request fulfilled, document follows
          headers: {}
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SharedLinkSchema'
                type: array
        '400':
          description: Bad request syntax or unsupported method
          content:
            application/json:
              schema:
                properties:
                  status_code:
                    type: integer
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                      - 'null'
                      - object
                      - array
                type: object
                required:
                  - detail
                  - status_code
                description: Validation Exception
                examples:
                  - status_code: 400
                    detail: Bad Request
                    extra: {}
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaNoneType'
      deprecated: false
    post:
      tags:
        - v1-shared-link
      summary: Create
      operationId: ApiV1SitesSiteUuidScansScanIidSharedCreate
      parameters:
        - name: site_uuid
          in: path
          schema:
            type: string
            format: uuid
          required: true
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
        - name: scan_iid
          in: path
          schema:
            type: integer
          required: true
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SharedLinkCreateSchema'
        required: true
      responses:
        '201':
          description: Document created, URL follows
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedLinkSchema'
        '400':
          description: Bad request syntax or unsupported method
          content:
            application/json:
              schema:
                properties:
                  status_code:
                    type: integer
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                      - 'null'
                      - object
                      - array
                type: object
                required:
                  - detail
                  - status_code
                description: Validation Exception
                examples:
                  - status_code: 400
                    detail: Bad Request
                    extra: {}
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaRoleAttributeDescriptionSchema'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaNoneType'
      deprecated: false
  /api/v1/sites/add:
    post:
      tags:
        - v1-site
      summary: Add
      operationId: ApiV1SitesAddAdd
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SiteCreateSchema'
        required: true
      responses:
        '201':
          description: Document created, URL follows
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteSchema'
        '400':
          description: Bad request syntax or unsupported method
          content:
            application/json:
              schema:
                properties:
                  status_code:
                    type: integer
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                      - 'null'
                      - object
                      - array
                type: object
                required:
                  - detail
                  - status_code
                description: Validation Exception
                examples:
                  - status_code: 400
                    detail: Bad Request
                    extra: {}
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaRoleAttributeDescriptionSchema'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaNoneType'
        '503':
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaNoneType'
      deprecated: false
  /api/v1/sites/{site_uuid}:
    get:
      tags:
        - v1-site
      summary: Get
      operationId: ApiV1SitesSiteUuidGet
      parameters:
        - name: site_uuid
          in: path
          schema:
            type: string
            format: uuid
          required: true
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
      responses:
        '200':
          description: Request fulfilled, document follows
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteSchema'
        '400':
          description: Bad request syntax or unsupported method
          content:
            application/json:
              schema:
                properties:
                  status_code:
                    type: integer
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                      - 'null'
                      - object
                      - array
                type: object
                required:
                  - detail
                  - status_code
                description: Validation Exception
                examples:
                  - status_code: 400
                    detail: Bad Request
                    extra: {}
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaNoneType'
      deprecated: false
  /api/v1/sites:
    get:
      tags:
        - v1-site
      summary: GetAll
      operationId: ApiV1SitesGetAll
      responses:
        '200':
          description: Request fulfilled, document follows
          headers: {}
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SiteSchema'
                type: array
      deprecated: false
  /api/v1/sites/{site_uuid}/settings:
    get:
      tags:
        - v1-site
      summary: GetSettings
      operationId: ApiV1SitesSiteUuidSettingsGetSettings
      parameters:
        - name: site_uuid
          in: path
          schema:
            type: string
            format: uuid
          required: true
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
      responses:
        '200':
          description: Request fulfilled, document follows
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteSettingsInfoSchema'
        '400':
          description: Bad request syntax or unsupported method
          content:
            application/json:
              schema:
                properties:
                  status_code:
                    type: integer
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                      - 'null'
                      - object
                      - array
                type: object
                required:
                  - detail
                  - status_code
                description: Validation Exception
                examples:
                  - status_code: 400
                    detail: Bad Request
                    extra: {}
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaNoneType'
      deprecated: false
    post:
      tags:
        - v1-site
      summary: SetSettings
      operationId: ApiV1SitesSiteUuidSettingsSetSettings
      parameters:
        - name: site_uuid
          in: path
          schema:
            type: string
            format: uuid
          required: true
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SiteSetSettingsSchema'
        required: true
      responses:
        '201':
          description: Document created, URL follows
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteSettingsInfoSchema'
        '400':
          description: Bad request syntax or unsupported method
          content:
            application/json:
              schema:
                properties:
                  status_code:
                    type: integer
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                      - 'null'
                      - object
                      - array
                type: object
                required:
                  - detail
                  - status_code
                description: Validation Exception
                examples:
                  - status_code: 400
                    detail: Bad Request
                    extra: {}
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaRoleAttributeDescriptionSchema'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaNoneType'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaNoneType'
      deprecated: false
  /api/v1/sites/{site_uuid}/scans/{scan_iid}/vulnerabilities:
    get:
      tags:
        - v1-vulnerabilities
      summary: GetGroups
      operationId: ApiV1SitesSiteUuidScansScanIidVulnerabilitiesGetGroups
      parameters:
        - name: site_uuid
          in: path
          schema:
            type: string
            format: uuid
          required: true
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
        - name: scan_iid
          in: path
          schema:
            type: integer
          required: true
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
        - name: severity
          in: query
          schema:
            type:
              - 'null'
              - string
            enum:
              - high
              - medium
              - low
              - info
              - null
          required: false
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
        - name: authorization
          in: header
          schema:
            type: string
          required: true
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
      responses:
        '200':
          description: Request fulfilled, document follows
          headers: {}
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/VulnGroupSchema'
                type: array
        '400':
          description: Bad request syntax or unsupported method
          content:
            application/json:
              schema:
                properties:
                  status_code:
                    type: integer
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                      - 'null'
                      - object
                      - array
                type: object
                required:
                  - detail
                  - status_code
                description: Validation Exception
                examples:
                  - status_code: 400
                    detail: Bad Request
                    extra: {}
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaRoleAttributeDescriptionSchema'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaNoneType'
      deprecated: false
  /api/v1/sites/{site_uuid}/scans/{scan_iid}/vulnerabilities/{issue_type}/{group_name}/{severity}:
    get:
      tags:
        - v1-vulnerabilities
      summary: GetInGroup
      operationId: >-
        ApiV1SitesSiteUuidScansScanIidVulnerabilitiesIssueTypeGroupNameSeverityGetInGroup
      parameters:
        - name: site_uuid
          in: path
          schema:
            type: string
            format: uuid
          required: true
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
        - name: scan_iid
          in: path
          schema:
            type: integer
          required: true
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
        - name: issue_type
          in: path
          schema:
            type: string
            enum:
              - apps
              - cve
              - error_page
              - issue
          required: true
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
        - name: group_name
          in: path
          schema:
            type: string
          required: true
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
        - name: severity
          in: path
          schema:
            type: string
            enum:
              - high
              - medium
              - low
              - info
          required: true
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
        - name: page
          in: query
          schema:
            oneOf:
              - type: 'null'
              - type: integer
                minimum: 1
          required: false
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
        - name: limit
          in: query
          schema:
            oneOf:
              - type: 'null'
              - type: integer
                maximum: 100
                minimum: 1
          required: false
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
        - name: authorization
          in: header
          schema:
            type: string
          required: true
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
      responses:
        '200':
          description: Request fulfilled, document follows
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationSchemaVulnInGroupSchema'
        '400':
          description: Bad request syntax or unsupported method
          content:
            application/json:
              schema:
                properties:
                  status_code:
                    type: integer
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                      - 'null'
                      - object
                      - array
                type: object
                required:
                  - detail
                  - status_code
                description: Validation Exception
                examples:
                  - status_code: 400
                    detail: Bad Request
                    extra: {}
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaRoleAttributeDescriptionSchema'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaNoneType'
        '500':
          description: Internal server error
      deprecated: false
  /api/v1/sites/{site_uuid}/scans/{scan_iid}/perimeter:
    get:
      tags:
        - v1-vulnerabilities
      summary: GetPerimeter
      operationId: ApiV1SitesSiteUuidScansScanIidPerimeterGetPerimeter
      parameters:
        - name: site_uuid
          in: path
          schema:
            type: string
            format: uuid
          required: true
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
        - name: scan_iid
          in: path
          schema:
            type: integer
          required: true
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
        - name: severity
          in: query
          schema:
            oneOf:
              - type: 'null'
              - items:
                  type: string
                  enum:
                    - high
                    - medium
                    - low
                    - info
                type: array
          required: false
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
        - name: page
          in: query
          schema:
            oneOf:
              - type: 'null'
              - type: integer
                minimum: 1
          required: false
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
        - name: limit
          in: query
          schema:
            oneOf:
              - type: 'null'
              - type: integer
                maximum: 100
                minimum: 1
          required: false
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
        - name: filter
          in: query
          schema:
            oneOf:
              - type: 'null'
              - type: string
          required: false
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
        - name: authorization
          in: header
          schema:
            type: string
          required: true
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
      responses:
        '200':
          description: Request fulfilled, document follows
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationSchemaVulnPerimeterSchema'
        '400':
          description: Bad request syntax or unsupported method
          content:
            application/json:
              schema:
                properties:
                  status_code:
                    type: integer
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                      - 'null'
                      - object
                      - array
                type: object
                required:
                  - detail
                  - status_code
                description: Validation Exception
                examples:
                  - status_code: 400
                    detail: Bad Request
                    extra: {}
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaRoleAttributeDescriptionSchema'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaNoneType'
      deprecated: false
  /api/v1/profiles/{profile_uuid}/clone:
    post:
      tags:
        - v1-profile
      summary: Clone
      operationId: ApiV1ProfilesProfileUuidCloneClone
      parameters:
        - name: profile_uuid
          in: path
          schema:
            type: string
            format: uuid
          required: true
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
        - name: authorization
          in: header
          schema:
            type: string
          required: true
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfileCloneSchema'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileShortInfoSchema'
        '400':
          description: Bad request syntax or unsupported method
          content:
            application/json:
              schema:
                properties:
                  status_code:
                    type: integer
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                      - 'null'
                      - object
                      - array
                type: object
                required:
                  - detail
                  - status_code
                description: Validation Exception
                examples:
                  - status_code: 400
                    detail: Bad Request
                    extra: {}
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaRoleAttributeDescriptionSchema'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaNoneType'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaNoneType'
      deprecated: false
  /api/v1/profiles:
    get:
      tags:
        - v1-profile
      summary: GetAll
      operationId: ApiV1ProfilesGetAll
      parameters:
        - name: authorization
          in: header
          schema:
            type: string
          required: true
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
      responses:
        '200':
          description: Request fulfilled, document follows
          headers: {}
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProfileShortInfoSchema'
                type: array
        '400':
          description: Bad request syntax or unsupported method
          content:
            application/json:
              schema:
                properties:
                  status_code:
                    type: integer
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                      - 'null'
                      - object
                      - array
                type: object
                required:
                  - detail
                  - status_code
                description: Validation Exception
                examples:
                  - status_code: 400
                    detail: Bad Request
                    extra: {}
      deprecated: false
    post:
      tags:
        - v1-profile
      summary: Create
      operationId: ApiV1ProfilesCreate
      parameters:
        - name: authorization
          in: header
          schema:
            type: string
          required: true
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfileCreateSchema'
        required: true
      responses:
        '201':
          description: Document created, URL follows
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileShortInfoSchema'
        '400':
          description: Bad request syntax or unsupported method
          content:
            application/json:
              schema:
                properties:
                  status_code:
                    type: integer
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                      - 'null'
                      - object
                      - array
                type: object
                required:
                  - detail
                  - status_code
                description: Validation Exception
                examples:
                  - status_code: 400
                    detail: Bad Request
                    extra: {}
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaRoleAttributeDescriptionSchema'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaInvalidModules'
      deprecated: false
  /api/v1/profiles/{profile_uuid}:
    get:
      tags:
        - v1-profile
      summary: Get
      operationId: ApiV1ProfilesProfileUuidGet
      parameters:
        - name: profile_uuid
          in: path
          schema:
            type: string
            format: uuid
          required: true
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
        - name: authorization
          in: header
          schema:
            type: string
          required: true
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
      responses:
        '200':
          description: Request fulfilled, document follows
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileFullInfoSchema'
        '400':
          description: Bad request syntax or unsupported method
          content:
            application/json:
              schema:
                properties:
                  status_code:
                    type: integer
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                      - 'null'
                      - object
                      - array
                type: object
                required:
                  - detail
                  - status_code
                description: Validation Exception
                examples:
                  - status_code: 400
                    detail: Bad Request
                    extra: {}
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaNoneType'
      deprecated: false
    delete:
      tags:
        - v1-profile
      summary: Delete
      operationId: ApiV1ProfilesProfileUuidDelete
      parameters:
        - name: profile_uuid
          in: path
          schema:
            type: string
            format: uuid
          required: true
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
        - name: authorization
          in: header
          schema:
            type: string
          required: true
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
      responses:
        '204':
          description: Request fulfilled, nothing follows
          headers: {}
        '400':
          description: Bad request syntax or unsupported method
          content:
            application/json:
              schema:
                properties:
                  status_code:
                    type: integer
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                      - 'null'
                      - object
                      - array
                type: object
                required:
                  - detail
                  - status_code
                description: Validation Exception
                examples:
                  - status_code: 400
                    detail: Bad Request
                    extra: {}
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaRoleAttributeDescriptionSchema'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaNoneType'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaProfilesConflicts'
      deprecated: false
    patch:
      tags:
        - v1-profile
      summary: Update
      operationId: ApiV1ProfilesProfileUuidUpdate
      parameters:
        - name: profile_uuid
          in: path
          schema:
            type: string
            format: uuid
          required: true
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
        - name: authorization
          in: header
          schema:
            type: string
          required: true
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfileUpdateSchema'
        required: true
      responses:
        '200':
          description: Request fulfilled, document follows
          headers: {}
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileShortInfoSchema'
        '400':
          description: Bad request syntax or unsupported method
          content:
            application/json:
              schema:
                properties:
                  status_code:
                    type: integer
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                      - 'null'
                      - object
                      - array
                type: object
                required:
                  - detail
                  - status_code
                description: Validation Exception
                examples:
                  - status_code: 400
                    detail: Bad Request
                    extra: {}
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaRoleAttributeDescriptionSchema'
        '404':
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaNoneType'
        '422':
          description: Unprocessable Entity
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaInvalidModules'
      deprecated: false
  /api/v1/profiles/modules/list:
    get:
      tags:
        - v1-profile
      summary: GetModules
      operationId: ApiV1ProfilesModulesListGetModules
      parameters:
        - name: severity
          in: query
          schema:
            type:
              - 'null'
              - string
            enum:
              - high
              - medium
              - low
              - info
              - null
          required: false
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
        - name: authorization
          in: header
          schema:
            type: string
          required: true
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
      responses:
        '200':
          description: Request fulfilled, document follows
          headers: {}
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
        '400':
          description: Bad request syntax or unsupported method
          content:
            application/json:
              schema:
                properties:
                  status_code:
                    type: integer
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                      - 'null'
                      - object
                      - array
                type: object
                required:
                  - detail
                  - status_code
                description: Validation Exception
                examples:
                  - status_code: 400
                    detail: Bad Request
                    extra: {}
      deprecated: false
  /api/v1/reports/html/{site_uuid}/{scan_iid}:
    get:
      tags:
        - v1-report
      summary: Html
      operationId: ApiV1ReportsHtmlSiteUuidScanIidHtml
      parameters:
        - name: site_uuid
          in: path
          schema:
            type: string
            format: uuid
          required: true
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
        - name: scan_iid
          in: path
          schema:
            type: integer
          required: true
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
        - name: locale
          in: query
          schema:
            type: string
            enum:
              - ru
              - en
          required: true
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
        - name: template
          in: query
          schema:
            type: string
            enum:
              - nist
              - oud4
              - owasp
              - owasp_mobile
              - pcidss
              - plain
              - sans
          required: true
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
      responses:
        '200':
          description: Request fulfilled, document follows
          headers: {}
          content:
            application/octet-stream:
              schema: {}
        '400':
          description: Bad request syntax or unsupported method
          content:
            application/json:
              schema:
                properties:
                  status_code:
                    type: integer
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                      - 'null'
                      - object
                      - array
                type: object
                required:
                  - detail
                  - status_code
                description: Validation Exception
                examples:
                  - status_code: 400
                    detail: Bad Request
                    extra: {}
        '403':
          description: Forbidden
        '404':
          description: Not found
        '503':
          description: Service unavailable
      deprecated: false
  /api/v1/reports/sarif/{site_uuid}/{scan_iid}:
    get:
      tags:
        - v1-report
      summary: Sarif
      operationId: ApiV1ReportsSarifSiteUuidScanIidSarif
      parameters:
        - name: site_uuid
          in: path
          schema:
            type: string
            format: uuid
          required: true
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
        - name: scan_iid
          in: path
          schema:
            type: integer
          required: true
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
        - name: locale
          in: query
          schema:
            type: string
            enum:
              - ru
              - en
          required: true
          deprecated: false
          allowEmptyValue: false
          allowReserved: false
      responses:
        '200':
          description: Request fulfilled, document follows
          headers: {}
          content:
            application/octet-stream:
              schema: {}
        '400':
          description: Bad request syntax or unsupported method
          content:
            application/json:
              schema:
                properties:
                  status_code:
                    type: integer
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                      - 'null'
                      - object
                      - array
                type: object
                required:
                  - detail
                  - status_code
                description: Validation Exception
                examples:
                  - status_code: 400
                    detail: Bad Request
                    extra: {}
        '403':
          description: Forbidden
        '404':
          description: Not found
        '503':
          description: Service unavailable
      deprecated: false
components:
  securitySchemes:
    apiToken:
      type: apiKey
      in: header
      name: basic
      description: basic {apiToken}
  schemas:
    APIKeyInfoSchema:
      properties:
        place:
          type: string
          enum:
            - COOKIE
            - HEADER
            - QUERY
        name:
          type: string
        value:
          type: string
        successUrl:
          type: string
        successString:
          oneOf:
            - type: 'null'
            - type: string
      type: object
      required:
        - name
        - place
        - successUrl
        - value
      title: APIKeyInfoSchema
    APIKeySchema:
      properties:
        place:
          type: string
          enum:
            - COOKIE
            - HEADER
            - QUERY
        name:
          type: string
          minLength: 1
        value:
          type: string
          minLength: 1
        successUrl:
          type: string
          minLength: 1
        successString:
          oneOf:
            - type: 'null'
            - type: string
              minLength: 3
      type: object
      required:
        - name
        - place
        - successUrl
        - value
      title: APIKeySchema
    APIProfileSchema:
      properties:
        uuid:
          type: string
          format: uuid
        name:
          type: string
        apiSchemas:
          items:
            $ref: '#/components/schemas/APISchemaSchema'
          type: array
        createdAt:
          type: string
          format: date-time
        group:
          $ref: '#/components/schemas/GroupShortInfoSchema'
      type: object
      required:
        - apiSchemas
        - createdAt
        - group
        - name
        - uuid
      title: APIProfileSchema
    APIProfileShortInfoSchema:
      properties:
        uuid:
          type: string
          format: uuid
        name:
          type: string
        countOfSchemas:
          type: integer
        group:
          oneOf:
            - type: 'null'
            - $ref: '#/components/schemas/GroupShortInfoSchema'
      type: object
      required:
        - countOfSchemas
        - name
        - uuid
      title: APIProfileShortInfoSchema
    APIProfilesConflicts:
      properties:
        sites:
          items:
            type: string
            examples:
              - hWjGDYPstccqXcjHsjXc
          type: array
          examples:
            - - FwrkivNyOTjTEvAUueXg
      type: object
      required:
        - sites
      title: APIProfilesConflicts
      examples:
        - sites:
            - fLqpHUrVGFBaiJKfHyEu
    APISchemaContentSchema:
      properties:
        type:
          type: string
          enum:
            - application/x-yaml
            - application/json
            - link
        data:
          type: string
      type: object
      required:
        - data
        - type
      title: APISchemaContentSchema
    APISchemaHAROptionsSchema:
      properties:
        headerBlacklist:
          items:
            type: string
          type: array
        cookieBlacklist:
          items:
            type: string
          type: array
      type: object
      required: []
      title: APISchemaHAROptionsSchema
    APISchemaOpenAPIOptionsSchema:
      properties:
        prefix:
          type: string
          default: ''
      type: object
      required: []
      title: APISchemaOpenAPIOptionsSchema
    APISchemaSchema:
      properties:
        type:
          type: string
          enum:
            - openapi
            - har
        content:
          $ref: '#/components/schemas/APISchemaContentSchema'
        openapiOptions:
          oneOf:
            - type: 'null'
            - $ref: '#/components/schemas/APISchemaOpenAPIOptionsSchema'
        harOptions:
          oneOf:
            - type: 'null'
            - $ref: '#/components/schemas/APISchemaHAROptionsSchema'
      type: object
      required:
        - content
        - type
      title: APISchemaSchema
    AuthChainCreateSchema:
      properties:
        groupUUID:
          type: string
          format: uuid
        name:
          type: string
          maxLength: 50
        profiles:
          items:
            type: string
            format: uuid
          type: array
          minItems: 2
      type: object
      required:
        - groupUUID
        - name
        - profiles
      title: AuthChainCreateSchema
    AuthChainFullInfoSchema:
      properties:
        uuid:
          type: string
          format: uuid
        name:
          type: string
        profiles:
          items:
            type: string
            format: uuid
          type: array
        group:
          $ref: '#/components/schemas/GroupShortInfoSchema'
      type: object
      required:
        - group
        - name
        - profiles
        - uuid
      title: AuthChainFullInfoSchema
    AuthChainShortInfoSchema:
      properties:
        uuid:
          type: string
          format: uuid
        name:
          type: string
        group:
          $ref: '#/components/schemas/GroupShortInfoSchema'
      type: object
      required:
        - group
        - name
        - uuid
      title: AuthChainShortInfoSchema
    AuthChainUpdateSchema:
      properties:
        name:
          oneOf:
            - type: 'null'
            - type: string
              maxLength: 50
        profiles:
          oneOf:
            - type: 'null'
            - items:
                type: string
                format: uuid
              type: array
              minItems: 2
      type: object
      required: []
      title: AuthChainUpdateSchema
    AuthChainsConflicts:
      properties:
        sites:
          items:
            type: string
            examples:
              - RbiZpNbycmaJxsvJnicH
          type: array
          examples:
            - - ImAYyNsCOKFpczLsLydE
      type: object
      required:
        - sites
      title: AuthChainsConflicts
      examples:
        - sites:
            - CqkZELcMizuuPkXSzTCV
    AuthProfileCreateSchema:
      properties:
        name:
          type: string
          maxLength: 50
          minLength: 1
        groupUUID:
          type: string
          format: uuid
        type:
          type: string
          enum:
            - HTTP_BASIC
            - HTML_AUTO_FORM
            - HTML_FORM_BASED
            - RAW_COOKIE
            - API_KEY
            - BEARER
        httpBasic:
          oneOf:
            - type: 'null'
            - $ref: '#/components/schemas/HTTPBasicSchema'
        htmlAutoForm:
          oneOf:
            - type: 'null'
            - $ref: '#/components/schemas/HTMLAutoFormSchema'
        htmlFormBased:
          oneOf:
            - type: 'null'
            - $ref: '#/components/schemas/HTMLFormBasedSchema'
        rawCookie:
          oneOf:
            - type: 'null'
            - $ref: '#/components/schemas/RawCookieSchema'
        apiKey:
          oneOf:
            - type: 'null'
            - $ref: '#/components/schemas/APIKeySchema'
        bearer:
          oneOf:
            - type: 'null'
            - $ref: '#/components/schemas/BearerSchema'
      type: object
      required:
        - groupUUID
        - name
        - type
      title: AuthProfileCreateSchema
    AuthProfileFullInfoSchema:
      properties:
        name:
          type: string
        type:
          type: string
          enum:
            - HTTP_BASIC
            - HTML_AUTO_FORM
            - HTML_FORM_BASED
            - RAW_COOKIE
            - API_KEY
            - BEARER
        httpBasic:
          oneOf:
            - type: 'null'
            - $ref: '#/components/schemas/HTTPBasicInfoSchema'
        htmlAutoForm:
          oneOf:
            - type: 'null'
            - $ref: '#/components/schemas/HTMLAutoFormInfoSchema'
        htmlFormBased:
          oneOf:
            - type: 'null'
            - $ref: '#/components/schemas/HTMLFormBasedInfoSchema'
        rawCookie:
          oneOf:
            - type: 'null'
            - $ref: '#/components/schemas/RawCookieInfoSchema'
        apiKey:
          oneOf:
            - type: 'null'
            - $ref: '#/components/schemas/APIKeyInfoSchema'
        bearer:
          oneOf:
            - type: 'null'
            - $ref: '#/components/schemas/BearerInfoSchema'
        group:
          $ref: '#/components/schemas/GroupShortInfoSchema'
      type: object
      required:
        - group
        - name
        - type
      title: AuthProfileFullInfoSchema
    AuthProfileShortInfoSchema:
      properties:
        uuid:
          type: string
          format: uuid
        name:
          type: string
        group:
          $ref: '#/components/schemas/GroupShortInfoSchema'
      type: object
      required:
        - group
        - name
        - uuid
      title: AuthProfileShortInfoSchema
    AuthProfileUpdateSchema:
      properties:
        name:
          oneOf:
            - type: 'null'
            - type: string
              maxLength: 50
              minLength: 1
        type:
          type:
            - 'null'
            - string
          enum:
            - HTTP_BASIC
            - HTML_AUTO_FORM
            - HTML_FORM_BASED
            - RAW_COOKIE
            - API_KEY
            - BEARER
            - null
        httpBasic:
          oneOf:
            - type: 'null'
            - $ref: '#/components/schemas/HTTPBasicSchema'
        htmlAutoForm:
          oneOf:
            - type: 'null'
            - $ref: '#/components/schemas/HTMLAutoFormSchema'
        htmlFormBased:
          oneOf:
            - type: 'null'
            - $ref: '#/components/schemas/HTMLFormBasedSchema'
        rawCookie:
          oneOf:
            - type: 'null'
            - $ref: '#/components/schemas/RawCookieSchema'
        apiKey:
          oneOf:
            - type: 'null'
            - $ref: '#/components/schemas/APIKeySchema'
        bearer:
          oneOf:
            - type: 'null'
            - $ref: '#/components/schemas/BearerSchema'
      type: object
      required: []
      title: AuthProfileUpdateSchema
    AuthProfilesConflicts:
      properties:
        sites:
          items:
            type: string
            examples:
              - TcKQUIcwTvBMEsEyrdnZ
          type: array
          examples:
            - - psZfntyvohCiaNNsTiUJ
        authChains:
          items:
            type: string
            examples:
              - IcNiBCdpVNqYdHPSHMmO
          type: array
          examples:
            - - JDnIcAIrFcrzRBWtUEyj
      type: object
      required:
        - authChains
        - sites
      title: AuthProfilesConflicts
      examples:
        - sites:
            - QPuqoreSwjJjTaCHrkUE
          authChains:
            - KiaVjcODaCAWEhGPYqEc
    AuthProfilesNotFoundUUIDs:
      properties:
        UUIDs:
          items:
            type: string
            examples:
              - pSjGbFxUQOrIizuyolBH
          type: array
          examples:
            - - DXChHqWgxJYBtOOVLgZW
      type: object
      required:
        - UUIDs
      title: AuthProfilesNotFoundUUIDs
      examples:
        - UUIDs:
            - wIRVLedtxqMNuKkXmitS
    AuthSettingsInfoSchema:
      properties:
        uuid:
          type: string
          format: uuid
        name:
          type: string
        type:
          type: string
          enum:
            - user
            - chain
      type: object
      required:
        - name
        - type
        - uuid
      title: AuthSettingsInfoSchema
    BearerInfoSchema:
      properties:
        token:
          type: string
        successUrl:
          type: string
        successString:
          oneOf:
            - type: 'null'
            - type: string
      type: object
      required:
        - successUrl
        - token
      title: BearerInfoSchema
    BearerSchema:
      properties:
        token:
          type: string
          minLength: 1
        successUrl:
          type: string
          minLength: 1
        successString:
          oneOf:
            - type: 'null'
            - type: string
              minLength: 3
      type: object
      required:
        - successUrl
        - token
      title: BearerSchema
    ChannelSchema:
      properties:
        httpVerb:
          type: string
        parameterName:
          type: string
        type:
          oneOf:
            - type: 'null'
            - type: string
      type: object
      required:
        - httpVerb
        - parameterName
        - type
      title: ChannelSchema
    ErrorFieldNoneType:
      properties:
        code:
          type: string
          examples:
            - sGGkFTTHdwecnxNGoKAA
        details:
          type: 'null'
          examples:
            - null
        description:
          oneOf:
            - type: 'null'
            - type: string
              examples:
                - nwrLzxyyJLPvPYZLdSRa
          examples:
            - rqMFojiePWlMXjDwYTak
      type: object
      required:
        - code
        - details
      title: ErrorFieldNoneType
      examples: []
    ErrorFieldAPIProfilesConflicts:
      properties:
        code:
          type: string
          examples:
            - VAsuEshTKFLZjQQrDxkw
        details:
          $ref: '#/components/schemas/APIProfilesConflicts'
        description:
          oneOf:
            - type: 'null'
            - type: string
              examples:
                - lsYjSBdQaRrVLsGZikpQ
          examples:
            - mmFEvCbabcOYguawIGUC
      type: object
      required:
        - code
        - details
      title: ErrorFieldAPIProfilesConflicts
      examples: []
    ErrorFieldAuthChainsConflicts:
      properties:
        code:
          type: string
          examples:
            - IxlzypMVFbCGQpmtiObD
        details:
          $ref: '#/components/schemas/AuthChainsConflicts'
        description:
          oneOf:
            - type: 'null'
            - type: string
              examples:
                - zYMIZKmHivKjwlvmKRzL
          examples:
            - NQPIMLBPjLHCFVPJUTrS
      type: object
      required:
        - code
        - details
      title: ErrorFieldAuthChainsConflicts
      examples: []
    ErrorFieldAuthProfilesNotFoundUUIDs:
      properties:
        code:
          type: string
          examples:
            - PQDHNwALGFHBlpJvStIg
        details:
          $ref: '#/components/schemas/AuthProfilesNotFoundUUIDs'
        description:
          oneOf:
            - type: 'null'
            - type: string
              examples:
                - FJQuXZBMSEgIxSkajitk
          examples:
            - rEizsaJAOTcLxTgRweyT
      type: object
      required:
        - code
        - details
      title: ErrorFieldAuthProfilesNotFoundUUIDs
      examples: []
    ErrorFieldAuthProfilesConflicts:
      properties:
        code:
          type: string
          examples:
            - UHSQKWNxguFbFvydeHoi
        details:
          $ref: '#/components/schemas/AuthProfilesConflicts'
        description:
          oneOf:
            - type: 'null'
            - type: string
              examples:
                - XhHSyYvDSaSRiKojAKtr
          examples:
            - lDETRahgoMzLRtalGDkN
      type: object
      required:
        - code
        - details
      title: ErrorFieldAuthProfilesConflicts
      examples: []
    ErrorFieldRoleAttributeDescriptionSchemaNone:
      properties:
        code:
          type: string
          examples:
            - SCXHPiclvcWpPcSrAFFp
        details:
          oneOf:
            - type: 'null'
            - $ref: '#/components/schemas/RoleAttributeDescriptionSchema'
          examples:
            - limits: nuCaldRKRIbrTyqiVesq
              permissions: HVMYoMLcDTblBFCTtICQ
        description:
          oneOf:
            - type: 'null'
            - type: string
              examples:
                - uVSLVIpXssGAZvWxlBJp
          examples:
            - EwbdtKiYsfjVRIdHbmdI
      type: object
      required:
        - code
      title: ErrorFieldUnionTypeRoleAttributeDescriptionSchema,NoneType
      examples: []
    ErrorFieldRoleAttributeDescriptionSchema:
      properties:
        code:
          type: string
          examples:
            - DwEkQQHiBrmXZcSFtoJx
        details:
          $ref: '#/components/schemas/RoleAttributeDescriptionSchema'
        description:
          oneOf:
            - type: 'null'
            - type: string
              examples:
                - vbaBcefxZzxwAxLUKwHV
          examples:
            - hmGJHERyPYwSLUcVNYZo
      type: object
      required:
        - code
        - details
      title: ErrorFieldRoleAttributeDescriptionSchema
      examples: []
    ErrorFieldInvalidModules:
      properties:
        code:
          type: string
          examples:
            - qpwwwnNUDLQoTDHCTzKn
        details:
          $ref: '#/components/schemas/InvalidModules'
        description:
          oneOf:
            - type: 'null'
            - type: string
              examples:
                - HIfMOBFFOLOAyhIHOHzd
          examples:
            - HJgmygZdKTdywYXEMTff
      type: object
      required:
        - code
        - details
      title: ErrorFieldInvalidModules
      examples: []
    ErrorFieldProfilesConflicts:
      properties:
        code:
          type: string
          examples:
            - vwpSrSdGjWcRNudKLPJQ
        details:
          $ref: '#/components/schemas/ProfilesConflicts'
        description:
          oneOf:
            - type: 'null'
            - type: string
              examples:
                - aBynwngpZdDQSxLyDhQP
          examples:
            - nFkPgkyqwgKieCQILnsF
      type: object
      required:
        - code
        - details
      title: ErrorFieldProfilesConflicts
      examples: []
    ErrorSchemaNoneType:
      properties:
        error:
          $ref: '#/components/schemas/ErrorFieldNoneType'
        detail:
          type: string
          examples:
            - SDBQNXqcJcDSuFiiFSZb
      type: object
      required:
        - detail
        - error
      title: ErrorSchemaNoneType
      examples: []
    ErrorSchemaAPIProfilesConflicts:
      properties:
        error:
          $ref: '#/components/schemas/ErrorFieldAPIProfilesConflicts'
        detail:
          type: string
          examples:
            - ctxrbGzKsdnjxheBhfgK
      type: object
      required:
        - detail
        - error
      title: ErrorSchemaAPIProfilesConflicts
      examples: []
    ErrorSchemaAuthChainsConflicts:
      properties:
        error:
          $ref: '#/components/schemas/ErrorFieldAuthChainsConflicts'
        detail:
          type: string
          examples:
            - UEWjPmuAvAedLooKNBQs
      type: object
      required:
        - detail
        - error
      title: ErrorSchemaAuthChainsConflicts
      examples: []
    ErrorSchemaAuthProfilesNotFoundUUIDs:
      properties:
        error:
          $ref: '#/components/schemas/ErrorFieldAuthProfilesNotFoundUUIDs'
        detail:
          type: string
          examples:
            - dteaQCDUeXNSQubZGLKp
      type: object
      required:
        - detail
        - error
      title: ErrorSchemaAuthProfilesNotFoundUUIDs
      examples: []
    ErrorSchemaAuthProfilesConflicts:
      properties:
        error:
          $ref: '#/components/schemas/ErrorFieldAuthProfilesConflicts'
        detail:
          type: string
          examples:
            - biAFVtQypXzKpUycdswf
      type: object
      required:
        - detail
        - error
      title: ErrorSchemaAuthProfilesConflicts
      examples: []
    ErrorSchemaRoleAttributeDescriptionSchemaNone:
      properties:
        error:
          $ref: '#/components/schemas/ErrorFieldRoleAttributeDescriptionSchemaNone'
        detail:
          type: string
          examples:
            - QnZCSkPGeNNtndFpmxgI
      type: object
      required:
        - detail
        - error
      title: ErrorSchemaUnionTypeRoleAttributeDescriptionSchema,NoneType
      examples: []
    ErrorSchemaRoleAttributeDescriptionSchema:
      properties:
        error:
          $ref: '#/components/schemas/ErrorFieldRoleAttributeDescriptionSchema'
        detail:
          type: string
          examples:
            - IhEVjsekkeZUyMKBwICn
      type: object
      required:
        - detail
        - error
      title: ErrorSchemaRoleAttributeDescriptionSchema
      examples: []
    ErrorSchemaInvalidModules:
      properties:
        error:
          $ref: '#/components/schemas/ErrorFieldInvalidModules'
        detail:
          type: string
          examples:
            - HVKViojCXkxyCpxaaBfF
      type: object
      required:
        - detail
        - error
      title: ErrorSchemaInvalidModules
      examples: []
    ErrorSchemaProfilesConflicts:
      properties:
        error:
          $ref: '#/components/schemas/ErrorFieldProfilesConflicts'
        detail:
          type: string
          examples:
            - ptOeHpnQQdeswvHtlYZQ
      type: object
      required:
        - detail
        - error
      title: ErrorSchemaProfilesConflicts
      examples: []
    GroupNewSchema:
      properties:
        uuid:
          oneOf:
            - type: 'null'
            - type: string
              format: uuid
        name:
          oneOf:
            - type: 'null'
            - type: string
              maxLength: 50
      type: object
      required: []
      title: GroupNewSchema
    GroupRoleFullInfoSchema:
      properties:
        uuid:
          type: string
          format: uuid
        name:
          type: string
        type:
          type: string
          enum:
            - product
            - user
            - personal
        createdAt:
          type: string
          format: date-time
        role:
          type:
            - 'null'
            - string
          enum:
            - basic_api_token
            - service_api_token
            - admin
            - manager
            - guest
            - basic_unregistered_user
            - basic_unverified_user
            - basic_verified_user
            - moderator
            - operator
            - auditor
            - null
      type: object
      required:
        - createdAt
        - name
        - type
        - uuid
      title: GroupRoleFullInfoSchema
    GroupRoleInfoSchema:
      properties:
        uuid:
          type: string
          format: uuid
        name:
          type: string
        type:
          type: string
          enum:
            - product
            - user
            - personal
        role:
          type:
            - 'null'
            - string
          enum:
            - basic_api_token
            - service_api_token
            - admin
            - manager
            - guest
            - basic_unregistered_user
            - basic_unverified_user
            - basic_verified_user
            - moderator
            - operator
            - auditor
            - null
      type: object
      required:
        - name
        - type
        - uuid
      title: GroupRoleInfoSchema
    GroupRolePermissionsSchema:
      properties:
        name:
          type:
            - 'null'
            - string
          enum:
            - basic_api_token
            - service_api_token
            - admin
            - manager
            - guest
            - basic_unregistered_user
            - basic_unverified_user
            - basic_verified_user
            - moderator
            - operator
            - auditor
            - null
        permissions:
          items:
            type: string
          type: array
      type: object
      required:
        - name
        - permissions
      title: GroupRolePermissionsSchema
    GroupShortInfoSchema:
      properties:
        uuid:
          type: string
          format: uuid
        name:
          type: string
      type: object
      required:
        - name
        - uuid
      title: GroupShortInfoSchema
    HTMLAutoFormInfoSchema:
      properties:
        username:
          type: string
        formUrl:
          type: string
        successString:
          type: string
      type: object
      required:
        - formUrl
        - successString
        - username
      title: HTMLAutoFormInfoSchema
    HTMLAutoFormSchema:
      properties:
        username:
          type: string
          minLength: 1
        password:
          type: string
          minLength: 1
        formUrl:
          type: string
          minLength: 1
        successString:
          type: string
          minLength: 3
      type: object
      required:
        - formUrl
        - password
        - successString
        - username
      title: HTMLAutoFormSchema
    HTMLFormBasedInfoSchema:
      properties:
        formUrl:
          type: string
        formXPath:
          type: string
        usernameField:
          type: string
        usernameValue:
          type: string
        passwordField:
          type: string
        regexpOfSuccess:
          type: string
        submitValue:
          oneOf:
            - type: 'null'
            - type: string
      type: object
      required:
        - formUrl
        - formXPath
        - passwordField
        - regexpOfSuccess
        - usernameField
        - usernameValue
      title: HTMLFormBasedInfoSchema
    HTMLFormBasedSchema:
      properties:
        formUrl:
          type: string
          minLength: 1
        formXPath:
          type: string
          minLength: 1
        usernameField:
          type: string
          minLength: 1
        usernameValue:
          type: string
          minLength: 1
        passwordField:
          type: string
          minLength: 1
        passwordValue:
          type: string
          minLength: 1
        regexpOfSuccess:
          type: string
          minLength: 3
        submitValue:
          oneOf:
            - type: 'null'
            - type: string
              minLength: 1
      type: object
      required:
        - formUrl
        - formXPath
        - passwordField
        - passwordValue
        - regexpOfSuccess
        - usernameField
        - usernameValue
      title: HTMLFormBasedSchema
    HTTPBasicInfoSchema:
      properties:
        username:
          type: string
        testString:
          oneOf:
            - type: 'null'
            - type: string
      type: object
      required:
        - username
      title: HTTPBasicInfoSchema
    HTTPBasicSchema:
      properties:
        username:
          type: string
          minLength: 1
        password:
          type: string
          minLength: 1
        testString:
          oneOf:
            - type: 'null'
            - type: string
              minLength: 3
      type: object
      required:
        - password
        - username
      title: HTTPBasicSchema
    HeaderSchema:
      properties:
        name:
          type: string
        value:
          type: string
      type: object
      required:
        - name
        - value
      title: HeaderSchema
    InvalidModules:
      properties:
        invalidModules:
          items:
            type: string
            examples:
              - iCQhLofQdvIKNfgpRUvo
          type: array
          examples:
            - - FwbFWILdFWoqnFrSJCNk
      type: object
      required:
        - invalidModules
      title: InvalidModules
      examples:
        - invalidModules:
            - nwuwZqSRqubKziUxmyim
    NewAPIProfileSchema:
      properties:
        name:
          type: string
        apiSchemas:
          items:
            $ref: '#/components/schemas/APISchemaSchema'
          type: array
          maxItems: 1
          minItems: 1
        groupUUID:
          type: string
          format: uuid
      type: object
      required:
        - apiSchemas
        - groupUUID
        - name
      title: NewAPIProfileSchema
    PaginationSchemaVulnPerimeterSchema:
      properties:
        items:
          items:
            $ref: '#/components/schemas/VulnPerimeterSchema'
          type: array
        totalItems:
          type: integer
        currentPage:
          type: integer
        totalCount:
          type: integer
      type: object
      required:
        - currentPage
        - items
        - totalCount
        - totalItems
      title: PaginationSchemaVulnPerimeterSchema
    PaginationSchemaVulnInGroupSchema:
      properties:
        items:
          items:
            oneOf:
              - $ref: '#/components/schemas/VulnWESchema'
              - $ref: '#/components/schemas/VulnCVESchema'
              - $ref: '#/components/schemas/VulnErrorPageSchema'
          type: array
        totalItems:
          type: integer
        currentPage:
          type: integer
        totalCount:
          type: integer
      type: object
      required:
        - currentPage
        - items
        - totalCount
        - totalItems
      title: PaginationSchemaVulnInGroupSchema
    ProfileCloneSchema:
      properties:
        groupUUID:
          oneOf:
            - type: 'null'
            - type: string
              format: uuid
      type: object
      required: []
      title: ProfileCloneSchema
    ProfileCreateSchema:
      properties:
        name:
          type: string
          maxLength: 50
        params:
          $ref: '#/components/schemas/ProfileParamsSchema'
        baseProfileUUID:
          type: string
          format: uuid
        groupUUID:
          type: string
          format: uuid
      type: object
      required:
        - baseProfileUUID
        - groupUUID
        - name
        - params
      title: ProfileCreateSchema
    ProfileFullInfoSchema:
      properties:
        uuid:
          type: string
          format: uuid
        name:
          type: string
        type:
          type: string
          enum:
            - fast
            - full
            - optimal
            - authcheck
            - custom
            - system
        params:
          $ref: '#/components/schemas/ProfileParamsSchema'
        group:
          $ref: '#/components/schemas/GroupShortInfoSchema'
        isDeleted:
          type: boolean
      type: object
      required:
        - group
        - isDeleted
        - name
        - params
        - type
        - uuid
      title: ProfileFullInfoSchema
    ProfileParamsSchema:
      properties:
        scanScope:
          type:
            - 'null'
            - string
          enum:
            - domain
            - folder
            - path
            - base_domain
            - subdomain
            - null
        crawlingType:
          type:
            - 'null'
            - string
          enum:
            - smart
            - full_crawling_mode
            - null
        blacklist:
          oneOf:
            - type: 'null'
            - items:
                $ref: '#/components/schemas/ValidationSchema'
              type: array
        whitelist:
          oneOf:
            - type: 'null'
            - items:
                $ref: '#/components/schemas/ValidationSchema'
              type: array
        delayBetweenRequests:
          oneOf:
            - type: 'null'
            - type: number
        customHeaders:
          oneOf:
            - type: 'null'
            - items:
                $ref: '#/components/schemas/HeaderSchema'
              type: array
        proxy:
          oneOf:
            - type: 'null'
            - $ref: '#/components/schemas/ProxySchema'
        workers:
          oneOf:
            - type: 'null'
            - type: integer
              maximum: 50
              minimum: 1
        modules:
          oneOf:
            - type: 'null'
            - items:
                type: string
              type: array
        raw:
          oneOf:
            - type: 'null'
            - type: object
      type: object
      required: []
      title: ProfileParamsSchema
    ProfileShortInfoSchema:
      properties:
        uuid:
          type: string
          format: uuid
        name:
          type: string
        type:
          type: string
          enum:
            - fast
            - full
            - optimal
            - authcheck
            - custom
            - system
        group:
          oneOf:
            - type: 'null'
            - $ref: '#/components/schemas/GroupShortInfoSchema'
        isDeleted:
          type: boolean
      type: object
      required:
        - group
        - isDeleted
        - name
        - type
        - uuid
      title: ProfileShortInfoSchema
    ProfileUpdateSchema:
      properties:
        name:
          oneOf:
            - type: 'null'
            - type: string
              maxLength: 50
        params:
          oneOf:
            - type: 'null'
            - $ref: '#/components/schemas/ProfileParamsSchema'
      type: object
      required: []
      title: ProfileUpdateSchema
    ProfilesConflicts:
      properties:
        sites:
          items:
            type: string
            examples:
              - uHUplpaRjanyUsSWZEIC
          type: array
          examples:
            - - PJfvSvPROLrARwDcwziu
      type: object
      required:
        - sites
      title: ProfilesConflicts
      examples:
        - sites:
            - dYhLnYSBmewrlWGgyqPD
    ProxyAuthSchema:
      properties:
        username:
          type: string
        password:
          type: string
      type: object
      required:
        - password
        - username
      title: ProxyAuthSchema
    ProxySchema:
      properties:
        type:
          type: string
          enum:
            - http
            - https
            - http_no_connect
            - socks4
            - socks5
            - socks5h
            - transparent
        host:
          type: string
        port:
          type: integer
          maximum: 65535
          minimum: 0
        auth:
          oneOf:
            - type: 'null'
            - $ref: '#/components/schemas/ProxyAuthSchema'
      type: object
      required:
        - host
        - port
        - type
      title: ProxySchema
    RawCookieInfoSchema:
      properties:
        cookies:
          items:
            type: string
          type: array
        successUrl:
          type: string
        regexpOfSuccess:
          type: string
      type: object
      required:
        - cookies
        - regexpOfSuccess
        - successUrl
      title: RawCookieInfoSchema
    RawCookieSchema:
      properties:
        cookies:
          items:
            type: string
            minLength: 1
          type: array
        successUrl:
          type: string
          minLength: 1
        regexpOfSuccess:
          type: string
          minLength: 3
      type: object
      required:
        - cookies
        - regexpOfSuccess
        - successUrl
      title: RawCookieSchema
    RoleAttributeDescriptionSchema:
      properties:
        limits:
          type: string
          examples:
            - JIgNZYFcagWptUqCwdER
        permissions:
          type: string
          examples:
            - ilvbzQIBShDtFfOfiPXw
      type: object
      required: []
      title: RoleAttributeDescriptionSchema
      examples:
        - limits: vmoGjgxiHQOyswaLrqex
          permissions: EuTJmBVBFdzxuvECziwY
    RolesListSchema:
      properties:
        roles:
          items:
            type: string
            enum:
              - basic_api_token
              - service_api_token
              - admin
              - manager
              - guest
              - basic_unregistered_user
              - basic_unverified_user
              - basic_verified_user
              - moderator
              - operator
              - auditor
          type: array
      type: object
      required:
        - roles
      title: RolesListSchema
    ScanQueueProfilesSchema:
      properties:
        id:
          type: integer
        createdAt:
          type: string
          format: date-time
        startedAt:
          oneOf:
            - type: 'null'
            - type: string
              format: date-time
        finishedAt:
          oneOf:
            - type: 'null'
            - type: string
              format: date-time
        duration:
          type: number
        status:
          type: string
          enum:
            - created
            - sent_start_task
            - started
            - sent_stop_task
            - stopped
            - finished
        progress:
          type: integer
        perimeterScan:
          $ref: '#/components/schemas/VulnPerimeterInfoSchema'
        vulnStats:
          $ref: '#/components/schemas/VulnerabilitiesSchema'
        queuePosition:
          oneOf:
            - type: 'null'
            - type: integer
        errorReason:
          oneOf:
            - type: 'null'
            - type: string
        authStatus:
          type: string
          enum:
            - not_checked
            - checking
            - success
            - failed
        score:
          oneOf:
            - type: 'null'
            - type: number
              maximum: 10
              minimum: 1
        kbVersion:
          oneOf:
            - type: 'null'
            - type: string
        profile:
          $ref: '#/components/schemas/ProfileShortInfoSchema'
        authentication:
          oneOf:
            - type: 'null'
            - $ref: '#/components/schemas/AuthSettingsInfoSchema'
        apiProfile:
          oneOf:
            - type: 'null'
            - $ref: '#/components/schemas/APIProfileShortInfoSchema'
      type: object
      required:
        - apiProfile
        - authStatus
        - authentication
        - createdAt
        - duration
        - errorReason
        - finishedAt
        - id
        - kbVersion
        - perimeterScan
        - profile
        - progress
        - queuePosition
        - score
        - startedAt
        - status
        - vulnStats
      title: ScanQueueProfilesSchema
    SharedLinkCreateSchema:
      properties:
        ttl:
          type:
            - integer
            - 'null'
          enum:
            - 3
            - 24
            - 168
            - 720
            - 4320
            - null
        emails:
          oneOf:
            - type: 'null'
            - items:
                type: string
              type: array
      type: object
      required: []
      title: SharedLinkCreateSchema
    SharedLinkSchema:
      properties:
        uuid:
          type: string
        validTo:
          oneOf:
            - type: 'null'
            - type: string
              format: date-time
        emails:
          oneOf:
            - type: 'null'
            - items:
                type: string
              type: array
      type: object
      required:
        - emails
        - uuid
        - validTo
      title: SharedLinkSchema
    SiteCreateSchema:
      properties:
        url:
          type: string
        groupUUID:
          type: string
          format: uuid
        name:
          oneOf:
            - type: 'null'
            - type: string
              maxLength: 50
              minLength: 1
        profileUUID:
          oneOf:
            - type: 'null'
            - type: string
              format: uuid
        apiProfileUUID:
          oneOf:
            - type: 'null'
            - type: string
              format: uuid
        authenticationUUID:
          oneOf:
            - type: 'null'
            - type: string
              format: uuid
      type: object
      required:
        - groupUUID
        - url
      title: SiteCreateSchema
    SiteSchema:
      properties:
        uuid:
          type: string
          format: uuid
        url:
          type: string
        name:
          type: string
        verified:
          type: boolean
        createdAt:
          type: string
          format: date-time
        lastScan:
          oneOf:
            - type: 'null'
            - $ref: '#/components/schemas/ScanQueueProfilesSchema'
        profile:
          $ref: '#/components/schemas/ProfileShortInfoSchema'
        apiProfile:
          oneOf:
            - type: 'null'
            - $ref: '#/components/schemas/APIProfileShortInfoSchema'
        authentication:
          oneOf:
            - type: 'null'
            - $ref: '#/components/schemas/AuthSettingsInfoSchema'
        requestFullScanStatus:
          type:
            - 'null'
            - string
          enum:
            - pending
            - accepted
            - rejected
            - null
        authStatus:
          type: string
          enum:
            - not_checked
            - checking
            - success
            - failed
        group:
          $ref: '#/components/schemas/GroupShortInfoSchema'
      type: object
      required:
        - apiProfile
        - authStatus
        - authentication
        - createdAt
        - group
        - lastScan
        - name
        - profile
        - requestFullScanStatus
        - url
        - uuid
        - verified
      title: SiteSchema
    SiteSetSettingsSchema:
      properties:
        name:
          oneOf:
            - type: 'null'
            - type: string
              maxLength: 50
              minLength: 1
        url:
          oneOf:
            - type: 'null'
            - type: string
        profileUUID:
          oneOf:
            - type: 'null'
            - type: string
              format: uuid
        apiProfileUUID:
          oneOf:
            - type: 'null'
            - type: string
              format: uuid
        authenticationUUID:
          oneOf:
            - type: 'null'
            - type: string
              format: uuid
      type: object
      required: []
      title: SiteSetSettingsSchema
    SiteSettingsInfoSchema:
      properties:
        name:
          type: string
        url:
          type: string
        profile:
          $ref: '#/components/schemas/ProfileShortInfoSchema'
        apiProfile:
          oneOf:
            - type: 'null'
            - $ref: '#/components/schemas/APIProfileShortInfoSchema'
        authentication:
          oneOf:
            - type: 'null'
            - $ref: '#/components/schemas/AuthSettingsInfoSchema'
      type: object
      required:
        - apiProfile
        - authentication
        - name
        - profile
        - url
      title: SiteSettingsInfoSchema
    UpdateAPIProfileSchema:
      properties:
        name:
          oneOf:
            - type: 'null'
            - type: string
        apiSchemas:
          oneOf:
            - type: 'null'
            - items:
                $ref: '#/components/schemas/APISchemaSchema'
              type: array
              maxItems: 1
              minItems: 1
      type: object
      required: []
      title: UpdateAPIProfileSchema
    UserRoleSchema:
      properties:
        uuid:
          type: string
          format: uuid
        role:
          type:
            - 'null'
            - string
          enum:
            - basic_api_token
            - service_api_token
            - admin
            - manager
            - guest
            - basic_unregistered_user
            - basic_unverified_user
            - basic_verified_user
            - moderator
            - operator
            - auditor
            - null
      type: object
      required:
        - uuid
      title: UserRoleSchema
    UserUUIDSchema:
      properties:
        user_uuid:
          type: string
          format: uuid
      type: object
      required:
        - user_uuid
      title: UserUUIDSchema
    ValidationSchema:
      properties:
        type:
          type: string
          enum:
            - wildcard
            - regexp
            - string
        value:
          type: string
      type: object
      required:
        - type
        - value
      title: ValidationSchema
    VulnAppSchema:
      properties:
        name:
          type: string
        url:
          type: string
        version:
          oneOf:
            - type: 'null'
            - type: string
        type:
          oneOf:
            - type: 'null'
            - type: string
      type: object
      required:
        - name
        - type
        - url
        - version
      title: VulnAppSchema
    VulnAppsSchema:
      properties:
        apps:
          items:
            $ref: '#/components/schemas/VulnAppSchema'
          type: array
      type: object
      required:
        - apps
      title: VulnAppsSchema
    VulnCVEApprovedSchema:
      properties:
        cveId:
          type: string
        title:
          type: string
        cvss:
          type: number
        cvssVector:
          type: string
        matches:
          oneOf:
            - type: 'null'
            - items:
                type: string
              type: array
        requestRaw:
          oneOf:
            - type: 'null'
            - type: string
        responseRaw:
          oneOf:
            - type: 'null'
            - type: string
      type: object
      required:
        - cveId
        - cvss
        - cvssVector
        - matches
        - requestRaw
        - responseRaw
        - title
      title: VulnCVEApprovedSchema
    VulnCVESchema:
      properties:
        id:
          type: integer
        cveId:
          type: string
        title:
          type: string
        cvss:
          type: number
        cvssVector:
          type: string
      type: object
      required:
        - cveId
        - cvss
        - cvssVector
        - id
        - title
      title: VulnCVESchema
    VulnErrorPageSchema:
      properties:
        id:
          type: integer
        code:
          type: integer
        url:
          type: string
        request:
          type: object
        response:
          oneOf:
            - type: 'null'
            - type: object
      type: object
      required:
        - code
        - id
        - request
        - response
        - url
      title: VulnErrorPageSchema
    VulnGroupSchema:
      properties:
        issueType:
          type: string
          enum:
            - apps
            - cve
            - error_page
            - issue
        categoryLocaleKey:
          type: string
          enum:
            - sensitive_data
            - security_headers
            - access_control
            - cryptography
            - injection
            - insecure_design
            - security_misconfiguration
            - cve
            - tech_info
        count:
          type: integer
        groupTitle:
          type: string
        severity:
          type: string
          enum:
            - high
            - medium
            - low
            - info
        requestKey:
          oneOf:
            - type: 'null'
            - type: string
        vulnerability:
          oneOf:
            - $ref: '#/components/schemas/VulnAppsSchema'
            - $ref: '#/components/schemas/VulnCVESchema'
            - $ref: '#/components/schemas/VulnCVEApprovedSchema'
            - $ref: '#/components/schemas/VulnErrorPageSchema'
            - $ref: '#/components/schemas/VulnWESchema'
      type: object
      required:
        - categoryLocaleKey
        - count
        - groupTitle
        - issueType
        - requestKey
        - severity
        - vulnerability
      title: VulnGroupSchema
    VulnMatchesSchema:
      properties:
        foundData:
          items:
            type: string
          type: array
      type: object
      required:
        - foundData
      title: VulnMatchesSchema
    VulnPerimeterInfoSchema:
      properties:
        enabled:
          type: boolean
        portsCount:
          type: integer
      type: object
      required:
        - enabled
        - portsCount
      title: VulnPerimeterInfoSchema
    VulnPerimeterSchema:
      properties:
        subdomain:
          type: string
        ports:
          items:
            $ref: '#/components/schemas/VulnPortSchema'
          type: array
      type: object
      required:
        - ports
        - subdomain
      title: VulnPerimeterSchema
    VulnPortSchema:
      properties:
        ip:
          type: string
        port:
          type: integer
        severity:
          type: string
          enum:
            - high
            - medium
            - low
            - info
        description:
          type: string
      type: object
      required:
        - description
        - ip
        - port
        - severity
      title: VulnPortSchema
    VulnWESchema:
      properties:
        id:
          type: integer
        urlRel:
          type: string
        falsePositive:
          type: boolean
        fixed:
          type: boolean
        starred:
          type: boolean
        responseTime:
          type: number
        severity:
          type: string
          enum:
            - high
            - medium
            - low
            - info
        createdAt:
          type: string
          format: date-time
        channel:
          oneOf:
            - type: 'null'
            - $ref: '#/components/schemas/ChannelSchema'
        requestRaw:
          oneOf:
            - type: 'null'
            - type: string
        responseRaw:
          oneOf:
            - type: 'null'
            - type: string
        matches:
          oneOf:
            - type: 'null'
            - $ref: '#/components/schemas/VulnMatchesSchema'
        vector:
          oneOf:
            - type: 'null'
            - type: string
        urlFull:
          oneOf:
            - type: 'null'
            - type: string
      type: object
      required:
        - channel
        - createdAt
        - falsePositive
        - fixed
        - id
        - matches
        - requestRaw
        - responseRaw
        - responseTime
        - severity
        - starred
        - urlFull
        - urlRel
        - vector
      title: VulnWESchema
    VulnerabilitiesSchema:
      properties:
        high:
          $ref: '#/components/schemas/VulnerabilityStatSchema'
        medium:
          $ref: '#/components/schemas/VulnerabilityStatSchema'
        low:
          $ref: '#/components/schemas/VulnerabilityStatSchema'
        info:
          $ref: '#/components/schemas/VulnerabilityStatSchema'
      type: object
      required:
        - high
        - info
        - low
        - medium
      title: VulnerabilitiesSchema
    VulnerabilityStatSchema:
      properties:
        fixed:
          type: integer
        real:
          type: integer
      type: object
      required:
        - fixed
        - real
      title: VulnerabilityStatSchema
tags: []
