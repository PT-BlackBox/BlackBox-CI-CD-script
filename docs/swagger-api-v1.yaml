openapi: 3.0.0
info:
  title: 'BlackBox CI/CD API v.1.0'
  description: BlackBox API spec
  version: 3.0
  contact:
    name: API Support
    email: feedback.bbs@ptsecurity.com
security:
  - apiToken: []
servers:
  - url: /
paths:
  /api/v1/api-profiles:
    get:
      deprecated: false
      operationId: ApiV1ApiProfilesGetAll
      parameters:
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: header
        name: authorization
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/APIProfileShortInfoSchema'
                type: array
          description: Request fulfilled, document follows
          headers: {}
        '400':
          content:
            application/json:
              schema:
                description: Validation Exception
                examples:
                - detail: Bad Request
                  extra: {}
                  status_code: 400
                properties:
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                    - 'null'
                    - object
                    - array
                  status_code:
                    type: integer
                required:
                - detail
                - status_code
                type: object
          description: Bad request syntax or unsupported method
      summary: GetAll
      tags:
      - v1-api-profile
    post:
      deprecated: false
      operationId: ApiV1ApiProfilesCreate
      parameters:
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: header
        name: authorization
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewAPIProfileSchema'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIProfileShortInfoSchema'
          description: Created
        '400':
          content:
            application/json:
              schema:
                description: Validation Exception
                examples:
                - detail: Bad Request
                  extra: {}
                  status_code: 400
                properties:
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                    - 'null'
                    - object
                    - array
                  status_code:
                    type: integer
                required:
                - detail
                - status_code
                type: object
          description: Bad request syntax or unsupported method
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaRoleAttributeDescriptionSchema'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaNoneType'
          description: Not found
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaNoneType'
          description: Invalid data
      summary: Create
      tags:
      - v1-api-profile
  /api/v1/api-profiles/schema:
    post:
      deprecated: false
      operationId: ApiV1ApiProfilesSchemaCreateSchema
      parameters:
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: header
        name: authorization
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewAPISchemaSchema'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APISchemaShortSchema'
          description: Created
        '400':
          content:
            application/json:
              schema:
                description: Validation Exception
                examples:
                - detail: Bad Request
                  extra: {}
                  status_code: 400
                properties:
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                    - 'null'
                    - object
                    - array
                  status_code:
                    type: integer
                required:
                - detail
                - status_code
                type: object
          description: Bad request syntax or unsupported method
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaNoneType'
          description: Invalid data
      summary: CreateSchema
      tags:
      - v1-api-profile
  /api/v1/api-profiles/schema/file:
    post:
      deprecated: false
      operationId: ApiV1ApiProfilesSchemaFileCreateSchemaFile
      parameters:
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: header
        name: authorization
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NewAPISchemaFileSchema'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APISchemaFileShortInfo'
          description: Created
        '400':
          content:
            application/json:
              schema:
                description: Validation Exception
                examples:
                - detail: Bad Request
                  extra: {}
                  status_code: 400
                properties:
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                    - 'null'
                    - object
                    - array
                  status_code:
                    type: integer
                required:
                - detail
                - status_code
                type: object
          description: Bad request syntax or unsupported method
      summary: CreateSchemaFile
      tags:
      - v1-api-profile
  /api/v1/api-profiles/schema/{schema_uuid}:
    get:
      deprecated: false
      operationId: ApiV1ApiProfilesSchemaSchemaUuidGetSchema
      parameters:
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: path
        name: schema_uuid
        required: true
        schema:
          format: uuid
          type: string
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: header
        name: authorization
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APISchemaFullSchema'
          description: Request fulfilled, document follows
          headers: {}
        '400':
          content:
            application/json:
              schema:
                description: Validation Exception
                examples:
                - detail: Bad Request
                  extra: {}
                  status_code: 400
                properties:
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                    - 'null'
                    - object
                    - array
                  status_code:
                    type: integer
                required:
                - detail
                - status_code
                type: object
          description: Bad request syntax or unsupported method
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaNoneType'
          description: Not found
      summary: GetSchema
      tags:
      - v1-api-profile
  /api/v1/api-profiles/{profile_uuid}:
    delete:
      deprecated: false
      operationId: ApiV1ApiProfilesProfileUuidDelete
      parameters:
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: path
        name: profile_uuid
        required: true
        schema:
          format: uuid
          type: string
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: header
        name: authorization
        required: true
        schema:
          type: string
      responses:
        '204':
          description: Deleted
        '400':
          content:
            application/json:
              schema:
                description: Validation Exception
                examples:
                - detail: Bad Request
                  extra: {}
                  status_code: 400
                properties:
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                    - 'null'
                    - object
                    - array
                  status_code:
                    type: integer
                required:
                - detail
                - status_code
                type: object
          description: Bad request syntax or unsupported method
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaRoleAttributeDescriptionSchema'
          description: Forbidden
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaAPIProfilesConflicts'
          description: Conflict
      summary: Delete
      tags:
      - v1-api-profile
    get:
      deprecated: false
      operationId: ApiV1ApiProfilesProfileUuidGet
      parameters:
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: path
        name: profile_uuid
        required: true
        schema:
          format: uuid
          type: string
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: header
        name: authorization
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIProfileSchema'
          description: Request fulfilled, document follows
          headers: {}
        '400':
          content:
            application/json:
              schema:
                description: Validation Exception
                examples:
                - detail: Bad Request
                  extra: {}
                  status_code: 400
                properties:
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                    - 'null'
                    - object
                    - array
                  status_code:
                    type: integer
                required:
                - detail
                - status_code
                type: object
          description: Bad request syntax or unsupported method
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaNoneType'
          description: Not found
      summary: Get
      tags:
      - v1-api-profile
    patch:
      deprecated: false
      operationId: ApiV1ApiProfilesProfileUuidUpdate
      parameters:
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: path
        name: profile_uuid
        required: true
        schema:
          format: uuid
          type: string
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: header
        name: authorization
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAPIProfileSchema'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIProfileShortInfoSchema'
          description: Updated
        '400':
          content:
            application/json:
              schema:
                description: Validation Exception
                examples:
                - detail: Bad Request
                  extra: {}
                  status_code: 400
                properties:
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                    - 'null'
                    - object
                    - array
                  status_code:
                    type: integer
                required:
                - detail
                - status_code
                type: object
          description: Bad request syntax or unsupported method
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaRoleAttributeDescriptionSchema'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaNoneType'
          description: Not found
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaNoneType'
          description: Invalid data
      summary: Update
      tags:
      - v1-api-profile
  /api/v1/api-profiles/{profile_uuid}/clone:
    post:
      deprecated: false
      operationId: ApiV1ApiProfilesProfileUuidCloneClone
      parameters:
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: path
        name: profile_uuid
        required: true
        schema:
          format: uuid
          type: string
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: header
        name: authorization
        required: true
        schema:
          type: string
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIProfileShortInfoSchema'
          description: Created
        '400':
          content:
            application/json:
              schema:
                description: Validation Exception
                examples:
                - detail: Bad Request
                  extra: {}
                  status_code: 400
                properties:
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                    - 'null'
                    - object
                    - array
                  status_code:
                    type: integer
                required:
                - detail
                - status_code
                type: object
          description: Bad request syntax or unsupported method
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaRoleAttributeDescriptionSchema'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaNoneType'
          description: Not found
      summary: Clone
      tags:
      - v1-api-profile
  /api/v1/auth-chains:
    get:
      deprecated: false
      operationId: ApiV1AuthChainsGetAll
      parameters:
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: header
        name: authorization
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AuthChainShortInfoSchema'
                type: array
          description: Request fulfilled, document follows
          headers: {}
        '400':
          content:
            application/json:
              schema:
                description: Validation Exception
                examples:
                - detail: Bad Request
                  extra: {}
                  status_code: 400
                properties:
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                    - 'null'
                    - object
                    - array
                  status_code:
                    type: integer
                required:
                - detail
                - status_code
                type: object
          description: Bad request syntax or unsupported method
      summary: GetAll
      tags:
      - v1-auth-chain
    post:
      deprecated: false
      operationId: ApiV1AuthChainsCreate
      parameters:
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: header
        name: authorization
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthChainCreateSchema'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthChainShortInfoSchema'
          description: Created
        '400':
          content:
            application/json:
              schema:
                description: Validation Exception
                examples:
                - detail: Bad Request
                  extra: {}
                  status_code: 400
                properties:
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                    - 'null'
                    - object
                    - array
                  status_code:
                    type: integer
                required:
                - detail
                - status_code
                type: object
          description: Bad request syntax or unsupported method
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaRoleAttributeDescriptionSchema'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaNoneType'
          description: Not found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaNoneType'
          description: Conflict
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaAuthProfilesNotFoundUUIDs'
          description: Unprocessable Entity
      summary: Create
      tags:
      - v1-auth-chain
  /api/v1/auth-chains/{auth_chain_uuid}:
    delete:
      deprecated: false
      operationId: ApiV1AuthChainsAuthChainUuidDelete
      parameters:
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: path
        name: auth_chain_uuid
        required: true
        schema:
          format: uuid
          type: string
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: header
        name: authorization
        required: true
        schema:
          type: string
      responses:
        '204':
          description: Deleted
        '400':
          content:
            application/json:
              schema:
                description: Validation Exception
                examples:
                - detail: Bad Request
                  extra: {}
                  status_code: 400
                properties:
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                    - 'null'
                    - object
                    - array
                  status_code:
                    type: integer
                required:
                - detail
                - status_code
                type: object
          description: Bad request syntax or unsupported method
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaRoleAttributeDescriptionSchema'
          description: Forbidden
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaAuthChainsConflicts'
          description: Conflict
      summary: Delete
      tags:
      - v1-auth-chain
    get:
      deprecated: false
      operationId: ApiV1AuthChainsAuthChainUuidGet
      parameters:
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: path
        name: auth_chain_uuid
        required: true
        schema:
          format: uuid
          type: string
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: header
        name: authorization
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthChainFullInfoSchema'
          description: Request fulfilled, document follows
          headers: {}
        '400':
          content:
            application/json:
              schema:
                description: Validation Exception
                examples:
                - detail: Bad Request
                  extra: {}
                  status_code: 400
                properties:
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                    - 'null'
                    - object
                    - array
                  status_code:
                    type: integer
                required:
                - detail
                - status_code
                type: object
          description: Bad request syntax or unsupported method
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaNoneType'
          description: Not found
      summary: Get
      tags:
      - v1-auth-chain
    patch:
      deprecated: false
      operationId: ApiV1AuthChainsAuthChainUuidUpdate
      parameters:
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: path
        name: auth_chain_uuid
        required: true
        schema:
          format: uuid
          type: string
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: header
        name: authorization
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthChainUpdateSchema'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthChainShortInfoSchema'
          description: Updated
        '400':
          content:
            application/json:
              schema:
                description: Validation Exception
                examples:
                - detail: Bad Request
                  extra: {}
                  status_code: 400
                properties:
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                    - 'null'
                    - object
                    - array
                  status_code:
                    type: integer
                required:
                - detail
                - status_code
                type: object
          description: Bad request syntax or unsupported method
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaNoneType'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaNoneType'
          description: Not found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaNoneType'
          description: Conflict
      summary: Update
      tags:
      - v1-auth-chain
  /api/v1/auth-chains/{auth_chain_uuid}/clone:
    post:
      deprecated: false
      operationId: ApiV1AuthChainsAuthChainUuidCloneClone
      parameters:
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: path
        name: auth_chain_uuid
        required: true
        schema:
          format: uuid
          type: string
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: header
        name: authorization
        required: true
        schema:
          type: string
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthChainShortInfoSchema'
          description: Created
        '400':
          content:
            application/json:
              schema:
                description: Validation Exception
                examples:
                - detail: Bad Request
                  extra: {}
                  status_code: 400
                properties:
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                    - 'null'
                    - object
                    - array
                  status_code:
                    type: integer
                required:
                - detail
                - status_code
                type: object
          description: Bad request syntax or unsupported method
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaRoleAttributeDescriptionSchema'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaNoneType'
          description: Not found
      summary: Clone
      tags:
      - v1-auth-chain
  /api/v1/auth-profiles:
    get:
      deprecated: false
      operationId: ApiV1AuthProfilesGetAll
      parameters:
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: header
        name: authorization
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AuthProfileShortInfoSchema'
                type: array
          description: Request fulfilled, document follows
          headers: {}
        '400':
          content:
            application/json:
              schema:
                description: Validation Exception
                examples:
                - detail: Bad Request
                  extra: {}
                  status_code: 400
                properties:
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                    - 'null'
                    - object
                    - array
                  status_code:
                    type: integer
                required:
                - detail
                - status_code
                type: object
          description: Bad request syntax or unsupported method
      summary: GetAll
      tags:
      - v1-auth-profile
    post:
      deprecated: false
      operationId: ApiV1AuthProfilesPost
      parameters:
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: header
        name: authorization
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthProfileCreateSchema'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthProfileShortInfoSchema'
          description: Created
        '400':
          content:
            application/json:
              schema:
                description: Validation Exception
                examples:
                - detail: Bad Request
                  extra: {}
                  status_code: 400
                properties:
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                    - 'null'
                    - object
                    - array
                  status_code:
                    type: integer
                required:
                - detail
                - status_code
                type: object
          description: Bad request syntax or unsupported method
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaRoleAttributeDescriptionSchema'
          description: Forbidden
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaNoneType'
          description: Unprocessable Entity
      summary: Post
      tags:
      - v1-auth-profile
  /api/v1/auth-profiles/{auth_profile_uuid}:
    delete:
      deprecated: false
      operationId: ApiV1AuthProfilesAuthProfileUuidDelete
      parameters:
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: path
        name: auth_profile_uuid
        required: true
        schema:
          format: uuid
          type: string
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: header
        name: authorization
        required: true
        schema:
          type: string
      responses:
        '204':
          description: Request fulfilled, nothing follows
          headers: {}
        '400':
          content:
            application/json:
              schema:
                description: Validation Exception
                examples:
                - detail: Bad Request
                  extra: {}
                  status_code: 400
                properties:
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                    - 'null'
                    - object
                    - array
                  status_code:
                    type: integer
                required:
                - detail
                - status_code
                type: object
          description: Bad request syntax or unsupported method
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaRoleAttributeDescriptionSchema'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaNoneType'
          description: Not found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaAuthProfilesConflicts'
          description: Conflict
      summary: Delete
      tags:
      - v1-auth-profile
    get:
      deprecated: false
      operationId: ApiV1AuthProfilesAuthProfileUuidGet
      parameters:
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: path
        name: auth_profile_uuid
        required: true
        schema:
          format: uuid
          type: string
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: header
        name: authorization
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthProfileFullInfoSchema'
          description: Request fulfilled, document follows
          headers: {}
        '400':
          content:
            application/json:
              schema:
                description: Validation Exception
                examples:
                - detail: Bad Request
                  extra: {}
                  status_code: 400
                properties:
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                    - 'null'
                    - object
                    - array
                  status_code:
                    type: integer
                required:
                - detail
                - status_code
                type: object
          description: Bad request syntax or unsupported method
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaNoneType'
          description: Not found
      summary: Get
      tags:
      - v1-auth-profile
    patch:
      deprecated: false
      operationId: ApiV1AuthProfilesAuthProfileUuidPatch
      parameters:
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: path
        name: auth_profile_uuid
        required: true
        schema:
          format: uuid
          type: string
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: header
        name: authorization
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthProfileUpdateSchema'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthProfileShortInfoSchema'
          description: Request fulfilled, document follows
          headers: {}
        '400':
          content:
            application/json:
              schema:
                description: Validation Exception
                examples:
                - detail: Bad Request
                  extra: {}
                  status_code: 400
                properties:
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                    - 'null'
                    - object
                    - array
                  status_code:
                    type: integer
                required:
                - detail
                - status_code
                type: object
          description: Bad request syntax or unsupported method
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaRoleAttributeDescriptionSchema'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaNoneType'
          description: Not found
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaNoneType'
          description: Unprocessable Entity
      summary: Patch
      tags:
      - v1-auth-profile
  /api/v1/auth-profiles/{auth_profile_uuid}/clone:
    post:
      deprecated: false
      operationId: ApiV1AuthProfilesAuthProfileUuidCloneClone
      parameters:
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: path
        name: auth_profile_uuid
        required: true
        schema:
          format: uuid
          type: string
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: header
        name: authorization
        required: true
        schema:
          type: string
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthProfileShortInfoSchema'
          description: Created
        '400':
          content:
            application/json:
              schema:
                description: Validation Exception
                examples:
                - detail: Bad Request
                  extra: {}
                  status_code: 400
                properties:
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                    - 'null'
                    - object
                    - array
                  status_code:
                    type: integer
                required:
                - detail
                - status_code
                type: object
          description: Bad request syntax or unsupported method
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaRoleAttributeDescriptionSchema'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaNoneType'
          description: Not found
      summary: Clone
      tags:
      - v1-auth-profile
  /api/v1/groups:
    get:
      deprecated: false
      operationId: ApiV1GroupsGetAll
      parameters:
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: query
        name: by_name
        required: false
        schema:
          oneOf:
          - type: 'null'
          - type: string
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: query
        name: by_role
        required: false
        schema:
          oneOf:
          - type: 'null'
          - type: string
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: header
        name: authorization
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/GroupRoleInfoSchema'
                type: array
          description: Request fulfilled, document follows
          headers: {}
        '400':
          content:
            application/json:
              schema:
                description: Validation Exception
                examples:
                - detail: Bad Request
                  extra: {}
                  status_code: 400
                properties:
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                    - 'null'
                    - object
                    - array
                  status_code:
                    type: integer
                required:
                - detail
                - status_code
                type: object
          description: Bad request syntax or unsupported method
      summary: GetAll
      tags:
      - v1-group
    post:
      deprecated: false
      operationId: ApiV1GroupsCreate
      parameters:
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: header
        name: authorization
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupNewSchema'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupShortInfoSchema'
          description: Created
        '400':
          content:
            application/json:
              schema:
                description: Validation Exception
                examples:
                - detail: Bad Request
                  extra: {}
                  status_code: 400
                properties:
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                    - 'null'
                    - object
                    - array
                  status_code:
                    type: integer
                required:
                - detail
                - status_code
                type: object
          description: Bad request syntax or unsupported method
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaRoleAttributeDescriptionSchema'
          description: Forbidden
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaNoneType'
          description: Unprocessable Entity
      summary: Create
      tags:
      - v1-group
  /api/v1/groups/roles/list:
    get:
      deprecated: false
      operationId: ApiV1GroupsRolesListGetRoles
      parameters:
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: header
        name: authorization
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RolesListSchema'
          description: Request fulfilled, document follows
          headers: {}
        '400':
          content:
            application/json:
              schema:
                description: Validation Exception
                examples:
                - detail: Bad Request
                  extra: {}
                  status_code: 400
                properties:
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                    - 'null'
                    - object
                    - array
                  status_code:
                    type: integer
                required:
                - detail
                - status_code
                type: object
          description: Bad request syntax or unsupported method
      summary: GetRoles
      tags:
      - v1-group
  /api/v1/groups/{group_uuid}:
    get:
      deprecated: false
      operationId: ApiV1GroupsGroupUuidGet
      parameters:
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: path
        name: group_uuid
        required: true
        schema:
          format: uuid
          type: string
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: header
        name: authorization
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupRoleFullInfoSchema'
          description: Request fulfilled, document follows
          headers: {}
        '400':
          content:
            application/json:
              schema:
                description: Validation Exception
                examples:
                - detail: Bad Request
                  extra: {}
                  status_code: 400
                properties:
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                    - 'null'
                    - object
                    - array
                  status_code:
                    type: integer
                required:
                - detail
                - status_code
                type: object
          description: Bad request syntax or unsupported method
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaNoneType'
          description: Not found
      summary: Get
      tags:
      - v1-group
  /api/v1/groups/{group_uuid}/permissions:
    get:
      deprecated: false
      operationId: ApiV1GroupsGroupUuidPermissionsGetPermissions
      parameters:
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: path
        name: group_uuid
        required: true
        schema:
          format: uuid
          type: string
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: header
        name: authorization
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupRolePermissionsSchema'
          description: Request fulfilled, document follows
          headers: {}
        '400':
          content:
            application/json:
              schema:
                description: Validation Exception
                examples:
                - detail: Bad Request
                  extra: {}
                  status_code: 400
                properties:
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                    - 'null'
                    - object
                    - array
                  status_code:
                    type: integer
                required:
                - detail
                - status_code
                type: object
          description: Bad request syntax or unsupported method
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaNoneType'
          description: Not found
      summary: GetPermissions
      tags:
      - v1-group
  /api/v1/groups/{group_uuid}/users/add:
    post:
      deprecated: false
      operationId: ApiV1GroupsGroupUuidUsersAddAddUsers
      parameters:
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: path
        name: group_uuid
        required: true
        schema:
          format: uuid
          type: string
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: header
        name: authorization
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              items:
                $ref: '#/components/schemas/UserRoleSchema'
              type: array
        required: true
      responses:
        '204':
          description: Request fulfilled, nothing follows
          headers: {}
        '400':
          content:
            application/json:
              schema:
                description: Validation Exception
                examples:
                - detail: Bad Request
                  extra: {}
                  status_code: 400
                properties:
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                    - 'null'
                    - object
                    - array
                  status_code:
                    type: integer
                required:
                - detail
                - status_code
                type: object
          description: Bad request syntax or unsupported method
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaRoleAttributeDescriptionSchema'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaNoneType'
          description: Not found
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaNoneType'
          description: Unprocessable Entity
      summary: AddUsers
      tags:
      - v1-group
  /api/v1/profiles:
    get:
      deprecated: false
      operationId: ApiV1ProfilesGetAll
      parameters:
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: header
        name: authorization
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/ProfileShortInfoSchema'
                type: array
          description: Request fulfilled, document follows
          headers: {}
        '400':
          content:
            application/json:
              schema:
                description: Validation Exception
                examples:
                - detail: Bad Request
                  extra: {}
                  status_code: 400
                properties:
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                    - 'null'
                    - object
                    - array
                  status_code:
                    type: integer
                required:
                - detail
                - status_code
                type: object
          description: Bad request syntax or unsupported method
      summary: GetAll
      tags:
      - v1-profile
    post:
      deprecated: false
      operationId: ApiV1ProfilesCreate
      parameters:
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: header
        name: authorization
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfileCreateSchema'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileShortInfoSchema'
          description: Document created, URL follows
          headers: {}
        '400':
          content:
            application/json:
              schema:
                description: Validation Exception
                examples:
                - detail: Bad Request
                  extra: {}
                  status_code: 400
                properties:
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                    - 'null'
                    - object
                    - array
                  status_code:
                    type: integer
                required:
                - detail
                - status_code
                type: object
          description: Bad request syntax or unsupported method
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaRoleAttributeDescriptionSchema'
          description: Forbidden
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaInvalidModules'
          description: Unprocessable Entity
      summary: Create
      tags:
      - v1-profile
  /api/v1/profiles/modules/list:
    get:
      deprecated: false
      operationId: ApiV1ProfilesModulesListGetModules
      parameters:
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: query
        name: severity
        required: false
        schema:
          enum:
          - high
          - medium
          - low
          - info
          - null
          type:
          - 'null'
          - string
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: header
        name: authorization
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: Request fulfilled, document follows
          headers: {}
        '400':
          content:
            application/json:
              schema:
                description: Validation Exception
                examples:
                - detail: Bad Request
                  extra: {}
                  status_code: 400
                properties:
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                    - 'null'
                    - object
                    - array
                  status_code:
                    type: integer
                required:
                - detail
                - status_code
                type: object
          description: Bad request syntax or unsupported method
      summary: GetModules
      tags:
      - v1-profile
  /api/v1/profiles/{profile_uuid}:
    delete:
      deprecated: false
      operationId: ApiV1ProfilesProfileUuidDelete
      parameters:
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: path
        name: profile_uuid
        required: true
        schema:
          format: uuid
          type: string
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: header
        name: authorization
        required: true
        schema:
          type: string
      responses:
        '204':
          description: Request fulfilled, nothing follows
          headers: {}
        '400':
          content:
            application/json:
              schema:
                description: Validation Exception
                examples:
                - detail: Bad Request
                  extra: {}
                  status_code: 400
                properties:
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                    - 'null'
                    - object
                    - array
                  status_code:
                    type: integer
                required:
                - detail
                - status_code
                type: object
          description: Bad request syntax or unsupported method
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaRoleAttributeDescriptionSchema'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaNoneType'
          description: Not found
        '409':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaProfilesConflicts'
          description: Conflict
      summary: Delete
      tags:
      - v1-profile
    get:
      deprecated: false
      operationId: ApiV1ProfilesProfileUuidGet
      parameters:
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: path
        name: profile_uuid
        required: true
        schema:
          format: uuid
          type: string
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: header
        name: authorization
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileFullInfoSchema'
          description: Request fulfilled, document follows
          headers: {}
        '400':
          content:
            application/json:
              schema:
                description: Validation Exception
                examples:
                - detail: Bad Request
                  extra: {}
                  status_code: 400
                properties:
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                    - 'null'
                    - object
                    - array
                  status_code:
                    type: integer
                required:
                - detail
                - status_code
                type: object
          description: Bad request syntax or unsupported method
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaNoneType'
          description: Not found
      summary: Get
      tags:
      - v1-profile
    patch:
      deprecated: false
      operationId: ApiV1ProfilesProfileUuidUpdate
      parameters:
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: path
        name: profile_uuid
        required: true
        schema:
          format: uuid
          type: string
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: header
        name: authorization
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfileUpdateSchema'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileShortInfoSchema'
          description: Request fulfilled, document follows
          headers: {}
        '400':
          content:
            application/json:
              schema:
                description: Validation Exception
                examples:
                - detail: Bad Request
                  extra: {}
                  status_code: 400
                properties:
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                    - 'null'
                    - object
                    - array
                  status_code:
                    type: integer
                required:
                - detail
                - status_code
                type: object
          description: Bad request syntax or unsupported method
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaRoleAttributeDescriptionSchema'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaNoneType'
          description: Not found
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaInvalidModules'
          description: Unprocessable Entity
      summary: Update
      tags:
      - v1-profile
  /api/v1/profiles/{profile_uuid}/clone:
    post:
      deprecated: false
      operationId: ApiV1ProfilesProfileUuidCloneClone
      parameters:
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: path
        name: profile_uuid
        required: true
        schema:
          format: uuid
          type: string
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: header
        name: authorization
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProfileCloneSchema'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProfileShortInfoSchema'
          description: Created
        '400':
          content:
            application/json:
              schema:
                description: Validation Exception
                examples:
                - detail: Bad Request
                  extra: {}
                  status_code: 400
                properties:
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                    - 'null'
                    - object
                    - array
                  status_code:
                    type: integer
                required:
                - detail
                - status_code
                type: object
          description: Bad request syntax or unsupported method
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaRoleAttributeDescriptionSchema'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaNoneType'
          description: Not found
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaNoneType'
          description: Unprocessable Entity
      summary: Clone
      tags:
      - v1-profile
  /api/v1/reports/html/{scan_uuid}:
    get:
      deprecated: false
      operationId: ApiV1ReportsHtmlScanUuidHtml
      parameters:
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: path
        name: scan_uuid
        required: true
        schema:
          format: uuid
          type: string
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: query
        name: locale
        required: true
        schema:
          enum:
          - ru
          - en
          type: string
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: query
        name: template
        required: true
        schema:
          enum:
          - nist
          - oud4
          - owasp
          - owasp_mobile
          - pcidss
          - plain
          - sans
          type: string
      responses:
        '200':
          content:
            application/octet-stream:
              schema: {}
          description: Request fulfilled, document follows
          headers: {}
        '400':
          content:
            application/json:
              schema:
                description: Validation Exception
                examples:
                - detail: Bad Request
                  extra: {}
                  status_code: 400
                properties:
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                    - 'null'
                    - object
                    - array
                  status_code:
                    type: integer
                required:
                - detail
                - status_code
                type: object
          description: Bad request syntax or unsupported method
        '403':
          description: Forbidden
        '404':
          description: Not found
        '503':
          description: Service unavailable
      summary: Html
      tags:
      - v1-report
  /api/v1/reports/sarif/{scan_uuid}:
    get:
      deprecated: false
      operationId: ApiV1ReportsSarifScanUuidSarif
      parameters:
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: path
        name: scan_uuid
        required: true
        schema:
          format: uuid
          type: string
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: query
        name: locale
        required: true
        schema:
          enum:
          - ru
          - en
          type: string
      responses:
        '200':
          content:
            application/octet-stream:
              schema: {}
          description: Request fulfilled, document follows
          headers: {}
        '400':
          content:
            application/json:
              schema:
                description: Validation Exception
                examples:
                - detail: Bad Request
                  extra: {}
                  status_code: 400
                properties:
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                    - 'null'
                    - object
                    - array
                  status_code:
                    type: integer
                required:
                - detail
                - status_code
                type: object
          description: Bad request syntax or unsupported method
        '403':
          description: Forbidden
        '404':
          description: Not found
        '503':
          description: Service unavailable
      summary: Sarif
      tags:
      - v1-report
  /api/v1/scans/{scan_uuid}:
    get:
      deprecated: false
      operationId: ApiV1ScansScanUuidInfo
      parameters:
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: path
        name: scan_uuid
        required: true
        schema:
          format: uuid
          type: string
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: header
        name: authorization
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanQueueProfilesSchema'
          description: Request fulfilled, document follows
          headers: {}
        '400':
          content:
            application/json:
              schema:
                description: Validation Exception
                examples:
                - detail: Bad Request
                  extra: {}
                  status_code: 400
                properties:
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                    - 'null'
                    - object
                    - array
                  status_code:
                    type: integer
                required:
                - detail
                - status_code
                type: object
          description: Bad request syntax or unsupported method
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaRoleAttributeDescriptionSchema'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaNoneType'
          description: Not found
      summary: Info
      tags:
      - v1-scan
  /api/v1/scans/{scan_uuid}/perimeter:
    get:
      deprecated: false
      operationId: ApiV1ScansScanUuidPerimeterGetPerimeter
      parameters:
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: path
        name: scan_uuid
        required: true
        schema:
          format: uuid
          type: string
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: query
        name: severity
        required: false
        schema:
          oneOf:
          - type: 'null'
          - items:
              enum:
              - high
              - medium
              - low
              - info
              type: string
            type: array
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: query
        name: page
        required: false
        schema:
          oneOf:
          - type: 'null'
          - minimum: 1.0
            type: integer
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: query
        name: limit
        required: false
        schema:
          oneOf:
          - type: 'null'
          - maximum: 100.0
            minimum: 1.0
            type: integer
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: query
        name: filter
        required: false
        schema:
          oneOf:
          - type: 'null'
          - type: string
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: header
        name: authorization
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationSchemaVulnPerimeterSchema'
          description: Request fulfilled, document follows
          headers: {}
        '400':
          content:
            application/json:
              schema:
                description: Validation Exception
                examples:
                - detail: Bad Request
                  extra: {}
                  status_code: 400
                properties:
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                    - 'null'
                    - object
                    - array
                  status_code:
                    type: integer
                required:
                - detail
                - status_code
                type: object
          description: Bad request syntax or unsupported method
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaRoleAttributeDescriptionSchema'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaNoneType'
          description: Not found
      summary: GetPerimeter
      tags:
      - v1-vulnerabilities
  /api/v1/scans/{scan_uuid}/shared:
    get:
      deprecated: false
      operationId: ApiV1ScansScanUuidSharedGetAll
      parameters:
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: path
        name: scan_uuid
        required: true
        schema:
          format: uuid
          type: string
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: header
        name: authorization
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SharedLinkSchema'
                type: array
          description: Request fulfilled, document follows
          headers: {}
        '400':
          content:
            application/json:
              schema:
                description: Validation Exception
                examples:
                - detail: Bad Request
                  extra: {}
                  status_code: 400
                properties:
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                    - 'null'
                    - object
                    - array
                  status_code:
                    type: integer
                required:
                - detail
                - status_code
                type: object
          description: Bad request syntax or unsupported method
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaNoneType'
          description: Not found
      summary: GetAll
      tags:
      - v1-shared-link
    post:
      deprecated: false
      operationId: ApiV1ScansScanUuidSharedCreate
      parameters:
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: path
        name: scan_uuid
        required: true
        schema:
          format: uuid
          type: string
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: header
        name: authorization
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SharedLinkCreateSchema'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedLinkSchema'
          description: Document created, URL follows
          headers: {}
        '400':
          content:
            application/json:
              schema:
                description: Validation Exception
                examples:
                - detail: Bad Request
                  extra: {}
                  status_code: 400
                properties:
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                    - 'null'
                    - object
                    - array
                  status_code:
                    type: integer
                required:
                - detail
                - status_code
                type: object
          description: Bad request syntax or unsupported method
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaRoleAttributeDescriptionSchema'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaNoneType'
          description: Not found
      summary: Create
      tags:
      - v1-shared-link
  /api/v1/scans/{scan_uuid}/vulnerabilities:
    get:
      deprecated: false
      operationId: ApiV1ScansScanUuidVulnerabilitiesGetGroups
      parameters:
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: path
        name: scan_uuid
        required: true
        schema:
          format: uuid
          type: string
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: query
        name: severity
        required: false
        schema:
          enum:
          - high
          - medium
          - low
          - info
          - null
          type:
          - 'null'
          - string
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: header
        name: authorization
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/VulnGroupSchema'
                type: array
          description: Request fulfilled, document follows
          headers: {}
        '400':
          content:
            application/json:
              schema:
                description: Validation Exception
                examples:
                - detail: Bad Request
                  extra: {}
                  status_code: 400
                properties:
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                    - 'null'
                    - object
                    - array
                  status_code:
                    type: integer
                required:
                - detail
                - status_code
                type: object
          description: Bad request syntax or unsupported method
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaRoleAttributeDescriptionSchema'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaNoneType'
          description: Not found
      summary: GetGroups
      tags:
      - v1-vulnerabilities
  /api/v1/scans/{scan_uuid}/vulnerabilities/{issue_type}/{group_name}/{severity}:
    get:
      deprecated: false
      operationId: ApiV1ScansScanUuidVulnerabilitiesIssueTypeGroupNameSeverityGetInGroup
      parameters:
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: path
        name: scan_uuid
        required: true
        schema:
          format: uuid
          type: string
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: path
        name: issue_type
        required: true
        schema:
          enum:
          - apps
          - cve
          - error_page
          - issue
          type: string
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: path
        name: group_name
        required: true
        schema:
          type: string
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: path
        name: severity
        required: true
        schema:
          enum:
          - high
          - medium
          - low
          - info
          type: string
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: query
        name: page
        required: false
        schema:
          oneOf:
          - type: 'null'
          - minimum: 1.0
            type: integer
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: query
        name: limit
        required: false
        schema:
          oneOf:
          - type: 'null'
          - maximum: 100.0
            minimum: 1.0
            type: integer
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: header
        name: authorization
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginationSchemaVulnInGroupSchema'
          description: Request fulfilled, document follows
          headers: {}
        '400':
          content:
            application/json:
              schema:
                description: Validation Exception
                examples:
                - detail: Bad Request
                  extra: {}
                  status_code: 400
                properties:
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                    - 'null'
                    - object
                    - array
                  status_code:
                    type: integer
                required:
                - detail
                - status_code
                type: object
          description: Bad request syntax or unsupported method
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaRoleAttributeDescriptionSchema'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaNoneType'
          description: Not found
        '500':
          description: Internal server error
      summary: GetInGroup
      tags:
      - v1-vulnerabilities
  /api/v1/sites:
    get:
      deprecated: false
      operationId: ApiV1SitesGetAll
      parameters:
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: header
        name: authorization
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/SiteSchema'
                type: array
          description: Request fulfilled, document follows
          headers: {}
        '400':
          content:
            application/json:
              schema:
                description: Validation Exception
                examples:
                - detail: Bad Request
                  extra: {}
                  status_code: 400
                properties:
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                    - 'null'
                    - object
                    - array
                  status_code:
                    type: integer
                required:
                - detail
                - status_code
                type: object
          description: Bad request syntax or unsupported method
      summary: GetAll
      tags:
      - v1-site
  /api/v1/sites/add:
    post:
      deprecated: false
      operationId: ApiV1SitesAddAdd
      parameters:
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: header
        name: authorization
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SiteCreateSchema'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteSchema'
          description: Document created, URL follows
          headers: {}
        '400':
          content:
            application/json:
              schema:
                description: Validation Exception
                examples:
                - detail: Bad Request
                  extra: {}
                  status_code: 400
                properties:
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                    - 'null'
                    - object
                    - array
                  status_code:
                    type: integer
                required:
                - detail
                - status_code
                type: object
          description: Bad request syntax or unsupported method
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaRoleAttributeDescriptionSchema'
          description: Forbidden
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaNoneType'
          description: Unprocessable Entity
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaNoneType'
          description: Service unavailable
      summary: Add
      tags:
      - v1-site
  /api/v1/sites/{site_uuid}:
    get:
      deprecated: false
      operationId: ApiV1SitesSiteUuidGet
      parameters:
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: path
        name: site_uuid
        required: true
        schema:
          format: uuid
          type: string
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: header
        name: authorization
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteSchema'
          description: Request fulfilled, document follows
          headers: {}
        '400':
          content:
            application/json:
              schema:
                description: Validation Exception
                examples:
                - detail: Bad Request
                  extra: {}
                  status_code: 400
                properties:
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                    - 'null'
                    - object
                    - array
                  status_code:
                    type: integer
                required:
                - detail
                - status_code
                type: object
          description: Bad request syntax or unsupported method
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaNoneType'
          description: Not found
      summary: Get
      tags:
      - v1-site
  /api/v1/sites/{site_uuid}/settings:
    get:
      deprecated: false
      operationId: ApiV1SitesSiteUuidSettingsGetSettings
      parameters:
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: path
        name: site_uuid
        required: true
        schema:
          format: uuid
          type: string
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: header
        name: authorization
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteSettingsInfoSchema'
          description: Request fulfilled, document follows
          headers: {}
        '400':
          content:
            application/json:
              schema:
                description: Validation Exception
                examples:
                - detail: Bad Request
                  extra: {}
                  status_code: 400
                properties:
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                    - 'null'
                    - object
                    - array
                  status_code:
                    type: integer
                required:
                - detail
                - status_code
                type: object
          description: Bad request syntax or unsupported method
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaNoneType'
          description: Not found
      summary: GetSettings
      tags:
      - v1-site
    post:
      deprecated: false
      operationId: ApiV1SitesSiteUuidSettingsSetSettings
      parameters:
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: path
        name: site_uuid
        required: true
        schema:
          format: uuid
          type: string
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: header
        name: authorization
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SiteSetSettingsSchema'
        required: true
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteSettingsInfoSchema'
          description: Document created, URL follows
          headers: {}
        '400':
          content:
            application/json:
              schema:
                description: Validation Exception
                examples:
                - detail: Bad Request
                  extra: {}
                  status_code: 400
                properties:
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                    - 'null'
                    - object
                    - array
                  status_code:
                    type: integer
                required:
                - detail
                - status_code
                type: object
          description: Bad request syntax or unsupported method
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaRoleAttributeDescriptionSchema'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaNoneType'
          description: Not found
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaNoneType'
          description: Unprocessable Entity
      summary: SetSettings
      tags:
      - v1-site
  /api/v1/sites/{site_uuid}/start:
    post:
      deprecated: false
      operationId: ApiV1SitesSiteUuidStartStart
      parameters:
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: path
        name: site_uuid
        required: true
        schema:
          format: uuid
          type: string
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: header
        name: authorization
        required: true
        schema:
          type: string
      responses:
        '202':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScanQueueProfilesSchema'
          description: Request accepted, processing continues off-line
          headers: {}
        '400':
          content:
            application/json:
              schema:
                description: Validation Exception
                examples:
                - detail: Bad Request
                  extra: {}
                  status_code: 400
                properties:
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                    - 'null'
                    - object
                    - array
                  status_code:
                    type: integer
                required:
                - detail
                - status_code
                type: object
          description: Bad request syntax or unsupported method
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaRoleAttributeDescriptionSchemaNone'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaNoneType'
          description: Not found
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaNoneType'
          description: Service unavailable
      summary: Start
      tags:
      - v1-scan
  /api/v1/sites/{site_uuid}/stop:
    post:
      deprecated: false
      operationId: ApiV1SitesSiteUuidStopStop
      parameters:
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: path
        name: site_uuid
        required: true
        schema:
          format: uuid
          type: string
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: header
        name: authorization
        required: true
        schema:
          type: string
      responses:
        '204':
          description: Request fulfilled, nothing follows
          headers: {}
        '400':
          content:
            application/json:
              schema:
                description: Validation Exception
                examples:
                - detail: Bad Request
                  extra: {}
                  status_code: 400
                properties:
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                    - 'null'
                    - object
                    - array
                  status_code:
                    type: integer
                required:
                - detail
                - status_code
                type: object
          description: Bad request syntax or unsupported method
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaRoleAttributeDescriptionSchemaNone'
          description: Forbidden
        '404':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaNoneType'
          description: Not found
        '503':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaNoneType'
          description: Service unavailable
      summary: Stop
      tags:
      - v1-scan
  /api/v1/users:
    post:
      deprecated: false
      operationId: ApiV1UsersCreate
      parameters:
      - allowEmptyValue: false
        allowReserved: false
        deprecated: false
        in: header
        name: authorization
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUUIDSchema'
        required: true
      responses:
        '201':
          description: Document created, URL follows
          headers: {}
        '400':
          content:
            application/json:
              schema:
                description: Validation Exception
                examples:
                - detail: Bad Request
                  extra: {}
                  status_code: 400
                properties:
                  detail:
                    type: string
                  extra:
                    additionalProperties: {}
                    type:
                    - 'null'
                    - object
                    - array
                  status_code:
                    type: integer
                required:
                - detail
                - status_code
                type: object
          description: Bad request syntax or unsupported method
        '403':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaRoleAttributeDescriptionSchema'
          description: Forbidden
        '422':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorSchemaNoneType'
          description: Unprocessable Entity
      summary: Create
      tags:
      - v1-users
components:
  securitySchemes:
    apiToken:
      type: apiKey
      in: header
      name: basic
      description: basic {apiToken}
  schemas:
    APIKeyInfoSchema:
      properties:
        name:
          type: string
        place:
          enum:
            - COOKIE
            - HEADER
            - QUERY
          type: string
        successString:
          oneOf:
            - type: 'null'
            - type: string
        successUrl:
          type: string
        value:
          type: string
      required:
        - name
        - place
        - successUrl
        - value
      title: APIKeyInfoSchema
      type: object
    APIKeySchema:
      properties:
        name:
          minLength: 1
          type: string
        place:
          enum:
            - COOKIE
            - HEADER
            - QUERY
          type: string
        successString:
          oneOf:
            - type: 'null'
            - minLength: 3
              type: string
        successUrl:
          minLength: 1
          type: string
        value:
          minLength: 1
          type: string
      required:
        - name
        - place
        - successUrl
        - value
      title: APIKeySchema
      type: object
    APIProfileSchema:
      properties:
        apiSchemas:
          items:
            $ref: '#/components/schemas/APISchemaShortSchema'
          type: array
        createdAt:
          format: date-time
          type: string
        group:
          $ref: '#/components/schemas/GroupShortInfoSchema'
        name:
          type: string
        uuid:
          type: string
      required:
        - apiSchemas
        - createdAt
        - group
        - name
        - uuid
      title: APIProfileSchema
      type: object
    APIProfileShortInfoSchema:
      properties:
        countOfSchemas:
          type: integer
        group:
          oneOf:
            - type: 'null'
            - $ref: '#/components/schemas/GroupShortInfoSchema'
        name:
          type: string
        uuid:
          type: string
      required:
        - countOfSchemas
        - name
        - uuid
      title: APIProfileShortInfoSchema
      type: object
    APIProfilesConflicts:
      examples:
        - sites:
            - fLqpHUrVGFBaiJKfHyEu
      properties:
        sites:
          examples:
            - - FwrkivNyOTjTEvAUueXg
          items:
            examples:
              - hWjGDYPstccqXcjHsjXc
            type: string
          type: array
      required:
        - sites
      title: APIProfilesConflicts
      type: object
    APISchemaFileShortInfo:
      properties:
        uuid:
          type: string
      required:
        - uuid
      title: APISchemaFileShortInfo
      type: object
    APISchemaFullContentSchema:
      properties:
        data:
          description: link for type `link`, presigned url for others
          type: string
        type:
          enum:
            - application/x-yaml
            - application/json
            - link
          type: string
      required:
        - data
        - type
      title: APISchemaFullContentSchema
      type: object
    APISchemaFullSchema:
      properties:
        content:
          $ref: '#/components/schemas/APISchemaFullContentSchema'
        harOptions:
          oneOf:
            - type: 'null'
            - $ref: '#/components/schemas/APISchemaHAROptionsSchema'
        name:
          type: string
        openapiOptions:
          oneOf:
            - type: 'null'
            - $ref: '#/components/schemas/APISchemaOpenAPIOptionsSchema'
        type:
          enum:
            - openapi
            - har
          type: string
        uuid:
          type: string
      required:
        - content
        - name
        - type
        - uuid
      title: APISchemaFullSchema
      type: object
    APISchemaHAROptionsSchema:
      properties:
        cookieBlacklist:
          items:
            type: string
          type: array
        headerBlacklist:
          items:
            type: string
          type: array
      required: [ ]
      title: APISchemaHAROptionsSchema
      type: object
    APISchemaOpenAPIOptionsSchema:
      properties:
        prefix:
          default: ''
          type: string
      required: [ ]
      title: APISchemaOpenAPIOptionsSchema
      type: object
    APISchemaShortContentSchema:
      properties:
        data:
          description: link for type `link`, null for others
          oneOf:
            - type: 'null'
            - type: string
        type:
          enum:
            - application/x-yaml
            - application/json
            - link
          type: string
      required:
        - type
      title: APISchemaShortContentSchema
      type: object
    APISchemaShortSchema:
      properties:
        content:
          $ref: '#/components/schemas/APISchemaShortContentSchema'
        harOptions:
          oneOf:
            - type: 'null'
            - $ref: '#/components/schemas/APISchemaHAROptionsSchema'
        name:
          type: string
        openapiOptions:
          oneOf:
            - type: 'null'
            - $ref: '#/components/schemas/APISchemaOpenAPIOptionsSchema'
        type:
          enum:
            - openapi
            - har
          type: string
        uuid:
          type: string
      required:
        - content
        - name
        - type
        - uuid
      title: APISchemaShortSchema
      type: object
    APITokenSchema:
      properties:
        token:
          type: string
      required:
        - token
      title: APITokenSchema
      type: object
    AuthChainCreateSchema:
      properties:
        groupUUID:
          format: uuid
          type: string
        name:
          maxLength: 50
          type: string
        profiles:
          items:
            format: uuid
            type: string
          minItems: 2
          type: array
      required:
        - groupUUID
        - name
        - profiles
      title: AuthChainCreateSchema
      type: object
    AuthChainFullInfoSchema:
      properties:
        group:
          $ref: '#/components/schemas/GroupShortInfoSchema'
        name:
          type: string
        profiles:
          items:
            format: uuid
            type: string
          type: array
        uuid:
          format: uuid
          type: string
      required:
        - group
        - name
        - profiles
        - uuid
      title: AuthChainFullInfoSchema
      type: object
    AuthChainShortInfoSchema:
      properties:
        group:
          $ref: '#/components/schemas/GroupShortInfoSchema'
        name:
          type: string
        uuid:
          format: uuid
          type: string
      required:
        - group
        - name
        - uuid
      title: AuthChainShortInfoSchema
      type: object
    AuthChainUpdateSchema:
      properties:
        name:
          oneOf:
            - type: 'null'
            - maxLength: 50
              type: string
        profiles:
          oneOf:
            - type: 'null'
            - items:
                format: uuid
                type: string
              minItems: 2
              type: array
      required: [ ]
      title: AuthChainUpdateSchema
      type: object
    AuthChainsConflicts:
      examples:
        - sites:
            - CqkZELcMizuuPkXSzTCV
      properties:
        sites:
          examples:
            - - ImAYyNsCOKFpczLsLydE
          items:
            examples:
              - RbiZpNbycmaJxsvJnicH
            type: string
          type: array
      required:
        - sites
      title: AuthChainsConflicts
      type: object
    AuthProfileCreateSchema:
      properties:
        apiKey:
          oneOf:
            - type: 'null'
            - $ref: '#/components/schemas/APIKeySchema'
        bearer:
          oneOf:
            - type: 'null'
            - $ref: '#/components/schemas/BearerSchema'
        groupUUID:
          format: uuid
          type: string
        htmlAutoForm:
          oneOf:
            - type: 'null'
            - $ref: '#/components/schemas/HTMLAutoFormSchema'
        htmlFormBased:
          oneOf:
            - type: 'null'
            - $ref: '#/components/schemas/HTMLFormBasedSchema'
        httpBasic:
          oneOf:
            - type: 'null'
            - $ref: '#/components/schemas/HTTPBasicSchema'
        name:
          maxLength: 50
          minLength: 1
          type: string
        rawCookie:
          oneOf:
            - type: 'null'
            - $ref: '#/components/schemas/RawCookieSchema'
        type:
          enum:
            - HTTP_BASIC
            - HTML_AUTO_FORM
            - HTML_FORM_BASED
            - RAW_COOKIE
            - API_KEY
            - BEARER
          type: string
      required:
        - groupUUID
        - name
        - type
      title: AuthProfileCreateSchema
      type: object
    AuthProfileFullInfoSchema:
      properties:
        apiKey:
          oneOf:
            - type: 'null'
            - $ref: '#/components/schemas/APIKeyInfoSchema'
        bearer:
          oneOf:
            - type: 'null'
            - $ref: '#/components/schemas/BearerInfoSchema'
        group:
          $ref: '#/components/schemas/GroupShortInfoSchema'
        htmlAutoForm:
          oneOf:
            - type: 'null'
            - $ref: '#/components/schemas/HTMLAutoFormInfoSchema'
        htmlFormBased:
          oneOf:
            - type: 'null'
            - $ref: '#/components/schemas/HTMLFormBasedInfoSchema'
        httpBasic:
          oneOf:
            - type: 'null'
            - $ref: '#/components/schemas/HTTPBasicInfoSchema'
        name:
          type: string
        rawCookie:
          oneOf:
            - type: 'null'
            - $ref: '#/components/schemas/RawCookieInfoSchema'
        type:
          enum:
            - HTTP_BASIC
            - HTML_AUTO_FORM
            - HTML_FORM_BASED
            - RAW_COOKIE
            - API_KEY
            - BEARER
          type: string
      required:
        - group
        - name
        - type
      title: AuthProfileFullInfoSchema
      type: object
    AuthProfileShortInfoSchema:
      properties:
        group:
          $ref: '#/components/schemas/GroupShortInfoSchema'
        name:
          type: string
        uuid:
          type: string
      required:
        - group
        - name
        - uuid
      title: AuthProfileShortInfoSchema
      type: object
    AuthProfileUpdateSchema:
      properties:
        apiKey:
          oneOf:
            - type: 'null'
            - $ref: '#/components/schemas/APIKeySchema'
        bearer:
          oneOf:
            - type: 'null'
            - $ref: '#/components/schemas/BearerSchema'
        htmlAutoForm:
          oneOf:
            - type: 'null'
            - $ref: '#/components/schemas/HTMLAutoFormSchema'
        htmlFormBased:
          oneOf:
            - type: 'null'
            - $ref: '#/components/schemas/HTMLFormBasedSchema'
        httpBasic:
          oneOf:
            - type: 'null'
            - $ref: '#/components/schemas/HTTPBasicSchema'
        name:
          oneOf:
            - type: 'null'
            - maxLength: 50
              minLength: 1
              type: string
        rawCookie:
          oneOf:
            - type: 'null'
            - $ref: '#/components/schemas/RawCookieSchema'
        type:
          enum:
            - HTTP_BASIC
            - HTML_AUTO_FORM
            - HTML_FORM_BASED
            - RAW_COOKIE
            - API_KEY
            - BEARER
            - null
          type:
            - 'null'
            - string
      required: [ ]
      title: AuthProfileUpdateSchema
      type: object
    AuthProfilesConflicts:
      examples:
        - authChains:
            - KiaVjcODaCAWEhGPYqEc
          sites:
            - QPuqoreSwjJjTaCHrkUE
      properties:
        authChains:
          examples:
            - - JDnIcAIrFcrzRBWtUEyj
          items:
            examples:
              - IcNiBCdpVNqYdHPSHMmO
            type: string
          type: array
        sites:
          examples:
            - - psZfntyvohCiaNNsTiUJ
          items:
            examples:
              - TcKQUIcwTvBMEsEyrdnZ
            type: string
          type: array
      required:
        - authChains
        - sites
      title: AuthProfilesConflicts
      type: object
    AuthProfilesNotFoundUUIDs:
      examples:
        - UUIDs:
            - wIRVLedtxqMNuKkXmitS
      properties:
        UUIDs:
          examples:
            - - DXChHqWgxJYBtOOVLgZW
          items:
            examples:
              - pSjGbFxUQOrIizuyolBH
            type: string
          type: array
      required:
        - UUIDs
      title: AuthProfilesNotFoundUUIDs
      type: object
    AuthSettingsInfoSchema:
      properties:
        name:
          type: string
        type:
          enum:
            - user
            - chain
          type: string
        uuid:
          type: string
      required:
        - name
        - type
        - uuid
      title: AuthSettingsInfoSchema
      type: object
    BearerInfoSchema:
      properties:
        successString:
          oneOf:
            - type: 'null'
            - type: string
        successUrl:
          type: string
        token:
          type: string
      required:
        - successUrl
        - token
      title: BearerInfoSchema
      type: object
    BearerSchema:
      properties:
        successString:
          oneOf:
            - type: 'null'
            - minLength: 3
              type: string
        successUrl:
          minLength: 1
          type: string
        token:
          minLength: 1
          type: string
      required:
        - successUrl
        - token
      title: BearerSchema
      type: object
    ChannelSchema:
      properties:
        httpVerb:
          type: string
        parameterName:
          type: string
        type:
          oneOf:
            - type: 'null'
            - type: string
      required:
        - httpVerb
        - parameterName
        - type
      title: ChannelSchema
      type: object
    ErrorFieldAPIProfilesConflicts:
      examples: [ ]
      properties:
        code:
          examples:
            - VAsuEshTKFLZjQQrDxkw
          type: string
        description:
          examples:
            - mmFEvCbabcOYguawIGUC
          oneOf:
            - type: 'null'
            - examples:
                - lsYjSBdQaRrVLsGZikpQ
              type: string
        details:
          $ref: '#/components/schemas/APIProfilesConflicts'
      required:
        - code
        - details
      title: ErrorFieldAPIProfilesConflicts
      type: object
    ErrorFieldAuthChainsConflicts:
      examples: [ ]
      properties:
        code:
          examples:
            - IxlzypMVFbCGQpmtiObD
          type: string
        description:
          examples:
            - NQPIMLBPjLHCFVPJUTrS
          oneOf:
            - type: 'null'
            - examples:
                - zYMIZKmHivKjwlvmKRzL
              type: string
        details:
          $ref: '#/components/schemas/AuthChainsConflicts'
      required:
        - code
        - details
      title: ErrorFieldAuthChainsConflicts
      type: object
    ErrorFieldAuthProfilesConflicts:
      examples: [ ]
      properties:
        code:
          examples:
            - UHSQKWNxguFbFvydeHoi
          type: string
        description:
          examples:
            - lDETRahgoMzLRtalGDkN
          oneOf:
            - type: 'null'
            - examples:
                - XhHSyYvDSaSRiKojAKtr
              type: string
        details:
          $ref: '#/components/schemas/AuthProfilesConflicts'
      required:
        - code
        - details
      title: ErrorFieldAuthProfilesConflicts
      type: object
    ErrorFieldAuthProfilesNotFoundUUIDs:
      examples: [ ]
      properties:
        code:
          examples:
            - PQDHNwALGFHBlpJvStIg
          type: string
        description:
          examples:
            - rEizsaJAOTcLxTgRweyT
          oneOf:
            - type: 'null'
            - examples:
                - FJQuXZBMSEgIxSkajitk
              type: string
        details:
          $ref: '#/components/schemas/AuthProfilesNotFoundUUIDs'
      required:
        - code
        - details
      title: ErrorFieldAuthProfilesNotFoundUUIDs
      type: object
    ErrorFieldInvalidModules:
      examples: [ ]
      properties:
        code:
          examples:
            - qpwwwnNUDLQoTDHCTzKn
          type: string
        description:
          examples:
            - HJgmygZdKTdywYXEMTff
          oneOf:
            - type: 'null'
            - examples:
                - HIfMOBFFOLOAyhIHOHzd
              type: string
        details:
          $ref: '#/components/schemas/InvalidModules'
      required:
        - code
        - details
      title: ErrorFieldInvalidModules
      type: object
    ErrorFieldNoneType:
      examples: [ ]
      properties:
        code:
          examples:
            - sGGkFTTHdwecnxNGoKAA
          type: string
        description:
          examples:
            - rqMFojiePWlMXjDwYTak
          oneOf:
            - type: 'null'
            - examples:
                - nwrLzxyyJLPvPYZLdSRa
              type: string
        details:
          examples:
            - null
          type: 'null'
      required:
        - code
        - details
      title: ErrorFieldNoneType
      type: object
    ErrorFieldProfilesConflicts:
      examples: [ ]
      properties:
        code:
          examples:
            - vwpSrSdGjWcRNudKLPJQ
          type: string
        description:
          examples:
            - nFkPgkyqwgKieCQILnsF
          oneOf:
            - type: 'null'
            - examples:
                - aBynwngpZdDQSxLyDhQP
              type: string
        details:
          $ref: '#/components/schemas/ProfilesConflicts'
      required:
        - code
        - details
      title: ErrorFieldProfilesConflicts
      type: object

    ErrorFieldRoleAttributeDescriptionSchema:
      examples: [ ]
      properties:
        code:
          examples:
            - DwEkQQHiBrmXZcSFtoJx
          type: string
        description:
          examples:
            - hmGJHERyPYwSLUcVNYZo
          oneOf:
            - type: 'null'
            - examples:
                - vbaBcefxZzxwAxLUKwHV
              type: string
        details:
          $ref: '#/components/schemas/RoleAttributeDescriptionSchema'
      required:
        - code
        - details
      title: ErrorFieldRoleAttributeDescriptionSchema
      type: object
    ErrorFieldRoleAttributeDescriptionSchemaNone:
      examples: [ ]
      properties:
        code:
          examples:
            - SCXHPiclvcWpPcSrAFFp
          type: string
        description:
          examples:
            - EwbdtKiYsfjVRIdHbmdI
          oneOf:
            - type: 'null'
            - examples:
                - uVSLVIpXssGAZvWxlBJp
              type: string
        details:
          examples:
            - limits: nuCaldRKRIbrTyqiVesq
              permissions: HVMYoMLcDTblBFCTtICQ
          oneOf:
            - type: 'null'
            - $ref: '#/components/schemas/RoleAttributeDescriptionSchema'
      required:
        - code
      title: ErrorFieldUnionTypeRoleAttributeDescriptionSchema,NoneType
      type: object
    ErrorSchemaAPIProfilesConflicts:
      examples: [ ]
      properties:
        detail:
          examples:
            - ctxrbGzKsdnjxheBhfgK
          type: string
        error:
          $ref: '#/components/schemas/ErrorFieldAPIProfilesConflicts'
      required:
        - detail
        - error
      title: ErrorSchemaAPIProfilesConflicts
      type: object
    ErrorSchemaAuthChainsConflicts:
      examples: [ ]
      properties:
        detail:
          examples:
            - UEWjPmuAvAedLooKNBQs
          type: string
        error:
          $ref: '#/components/schemas/ErrorFieldAuthChainsConflicts'
      required:
        - detail
        - error
      title: ErrorSchemaAuthChainsConflicts
      type: object
    ErrorSchemaAuthProfilesConflicts:
      examples: [ ]
      properties:
        detail:
          examples:
            - biAFVtQypXzKpUycdswf
          type: string
        error:
          $ref: '#/components/schemas/ErrorFieldAuthProfilesConflicts'
      required:
        - detail
        - error
      title: ErrorSchemaAuthProfilesConflicts
      type: object
    ErrorSchemaAuthProfilesNotFoundUUIDs:
      examples: [ ]
      properties:
        detail:
          examples:
            - dteaQCDUeXNSQubZGLKp
          type: string
        error:
          $ref: '#/components/schemas/ErrorFieldAuthProfilesNotFoundUUIDs'
      required:
        - detail
        - error
      title: ErrorSchemaAuthProfilesNotFoundUUIDs
      type: object
    ErrorSchemaInvalidModules:
      examples: [ ]
      properties:
        detail:
          examples:
            - HVKViojCXkxyCpxaaBfF
          type: string
        error:
          $ref: '#/components/schemas/ErrorFieldInvalidModules'
      required:
        - detail
        - error
      title: ErrorSchemaInvalidModules
      type: object
    ErrorSchemaNoneType:
      examples: [ ]
      properties:
        detail:
          examples:
            - SDBQNXqcJcDSuFiiFSZb
          type: string
        error:
          $ref: '#/components/schemas/ErrorFieldNoneType'
      required:
        - detail
        - error
      title: ErrorSchemaNoneType
      type: object
    ErrorSchemaProfilesConflicts:
      examples: [ ]
      properties:
        detail:
          examples:
            - ptOeHpnQQdeswvHtlYZQ
          type: string
        error:
          $ref: '#/components/schemas/ErrorFieldProfilesConflicts'
      required:
        - detail
        - error
      title: ErrorSchemaProfilesConflicts
      type: object

    ErrorSchemaRoleAttributeDescriptionSchema:
      examples: [ ]
      properties:
        detail:
          examples:
            - IhEVjsekkeZUyMKBwICn
          type: string
        error:
          $ref: '#/components/schemas/ErrorFieldRoleAttributeDescriptionSchema'
      required:
        - detail
        - error
      title: ErrorSchemaRoleAttributeDescriptionSchema
      type: object
    ErrorSchemaRoleAttributeDescriptionSchemaNone:
      examples: [ ]
      properties:
        detail:
          examples:
            - QnZCSkPGeNNtndFpmxgI
          type: string
        error:
          $ref: '#/components/schemas/ErrorFieldRoleAttributeDescriptionSchemaNone'
      required:
        - detail
        - error
      title: ErrorSchemaUnionTypeRoleAttributeDescriptionSchema,NoneType
      type: object
    GroupNewSchema:
      properties:
        name:
          oneOf:
            - type: 'null'
            - maxLength: 50
              type: string
        uuid:
          oneOf:
            - type: 'null'
            - format: uuid
              type: string
      required: [ ]
      title: GroupNewSchema
      type: object
    GroupRoleFullInfoSchema:
      properties:
        createdAt:
          format: date-time
          type: string
        name:
          type: string
        role:
          enum:
            - basic_api_token
            - service_api_token
            - admin
            - manager
            - guest
            - basic_unregistered_user
            - basic_unverified_user
            - basic_verified_user
            - moderator
            - operator
            - auditor
            - null
          type:
            - 'null'
            - string
        type:
          enum:
            - product
            - user
            - personal
          type: string
        uuid:
          type: string
      required:
        - createdAt
        - name
        - type
        - uuid
      title: GroupRoleFullInfoSchema
      type: object
    GroupRoleInfoSchema:
      properties:
        name:
          type: string
        role:
          enum:
            - basic_api_token
            - service_api_token
            - admin
            - manager
            - guest
            - basic_unregistered_user
            - basic_unverified_user
            - basic_verified_user
            - moderator
            - operator
            - auditor
            - null
          type:
            - 'null'
            - string
        type:
          enum:
            - product
            - user
            - personal
          type: string
        uuid:
          type: string
      required:
        - name
        - type
        - uuid
      title: GroupRoleInfoSchema
      type: object
    GroupRolePermissionsSchema:
      properties:
        name:
          enum:
            - basic_api_token
            - service_api_token
            - admin
            - manager
            - guest
            - basic_unregistered_user
            - basic_unverified_user
            - basic_verified_user
            - moderator
            - operator
            - auditor
            - null
          type:
            - 'null'
            - string
        permissions:
          items:
            type: string
          type: array
      required:
        - name
        - permissions
      title: GroupRolePermissionsSchema
      type: object
    GroupRoleShortInfoSchema:
      properties:
        name:
          type: string
        role:
          enum:
            - basic_api_token
            - service_api_token
            - admin
            - manager
            - guest
            - basic_unregistered_user
            - basic_unverified_user
            - basic_verified_user
            - moderator
            - operator
            - auditor
            - null
          type:
            - 'null'
            - string
        type:
          enum:
            - product
            - user
            - personal
          type: string
        uuid:
          type: string
      required:
        - name
        - type
        - uuid
      title: GroupRoleShortInfoSchema
      type: object
    GroupShortInfoSchema:
      properties:
        name:
          type: string
        uuid:
          type: string
      required:
        - name
        - uuid
      title: GroupShortInfoSchema
      type: object
    GroupUpdateSchema:
      properties:
        name:
          maxLength: 50
          type: string
      required:
        - name
      title: GroupUpdateSchema
      type: object
    HTMLAutoFormInfoSchema:
      properties:
        formUrl:
          type: string
        successString:
          type: string
        successUrl:
          oneOf:
            - type: 'null'
            - type: string
        username:
          type: string
      required:
        - formUrl
        - successString
        - username
      title: HTMLAutoFormInfoSchema
      type: object
    HTMLAutoFormSchema:
      properties:
        formUrl:
          minLength: 1
          type: string
        password:
          minLength: 1
          type: string
        successString:
          minLength: 3
          type: string
        successUrl:
          oneOf:
            - type: 'null'
            - minLength: 1
              type: string
        username:
          minLength: 1
          type: string
      required:
        - formUrl
        - password
        - successString
        - username
      title: HTMLAutoFormSchema
      type: object
    HTMLFormBasedInfoSchema:
      properties:
        formUrl:
          type: string
        formXPath:
          type: string
        passwordField:
          type: string
        regexpOfSuccess:
          type: string
        submitValue:
          oneOf:
            - type: 'null'
            - type: string
        successUrl:
          oneOf:
            - type: 'null'
            - type: string
        usernameField:
          type: string
        usernameValue:
          type: string
      required:
        - formUrl
        - formXPath
        - passwordField
        - regexpOfSuccess
        - usernameField
        - usernameValue
      title: HTMLFormBasedInfoSchema
      type: object
    HTMLFormBasedSchema:
      properties:
        formUrl:
          minLength: 1
          type: string
        formXPath:
          minLength: 1
          type: string
        passwordField:
          minLength: 1
          type: string
        passwordValue:
          minLength: 1
          type: string
        regexpOfSuccess:
          minLength: 3
          type: string
        submitValue:
          oneOf:
            - type: 'null'
            - minLength: 1
              type: string
        successUrl:
          oneOf:
            - type: 'null'
            - minLength: 1
              type: string
        usernameField:
          minLength: 1
          type: string
        usernameValue:
          minLength: 1
          type: string
      required:
        - formUrl
        - formXPath
        - passwordField
        - passwordValue
        - regexpOfSuccess
        - usernameField
        - usernameValue
      title: HTMLFormBasedSchema
      type: object
    HTTPBasicInfoSchema:
      properties:
        testString:
          oneOf:
            - type: 'null'
            - type: string
        username:
          type: string
      required:
        - username
      title: HTTPBasicInfoSchema
      type: object
    HTTPBasicSchema:
      properties:
        password:
          minLength: 1
          type: string
        testString:
          oneOf:
            - type: 'null'
            - minLength: 3
              type: string
        username:
          minLength: 1
          type: string
      required:
        - password
        - username
      title: HTTPBasicSchema
      type: object
    HeaderSchema:
      properties:
        name:
          type: string
        value:
          type: string
      required:
        - name
        - value
      title: HeaderSchema
      type: object
    InvalidModules:
      examples:
        - invalidModules:
            - nwuwZqSRqubKziUxmyim
      properties:
        invalidModules:
          examples:
            - - FwbFWILdFWoqnFrSJCNk
          items:
            examples:
              - iCQhLofQdvIKNfgpRUvo
            type: string
          type: array
      required:
        - invalidModules
      title: InvalidModules
      type: object
    ModulesLocaleSchema:
      properties:
        name:
          type: string
      required:
        - name
      title: ModulesLocaleSchema
      type: object
    NewAPIProfileSchema:
      properties:
        apiSchemas:
          items:
            format: uuid
            type: string
          maxItems: 1
          minItems: 1
          type: array
        groupUUID:
          format: uuid
          type: string
        name:
          type: string
      required:
        - apiSchemas
        - groupUUID
        - name
      title: NewAPIProfileSchema
      type: object
    NewAPISchemaFileSchema:
      properties:
        file:
          contentMediaType: application/octet-stream
          format: binary
          type: string
      required:
        - file
      title: NewAPISchemaFileSchema
      type: object
    NewAPISchemaSchema:
      properties:
        fileUuid:
          oneOf:
            - type: 'null'
            - format: uuid
              type: string
        harOptions:
          oneOf:
            - type: 'null'
            - $ref: '#/components/schemas/APISchemaHAROptionsSchema'
        link:
          oneOf:
            - type: 'null'
            - type: string
        name:
          oneOf:
            - type: 'null'
            - maxLength: 255
              minLength: 1
              type: string
        openapiOptions:
          oneOf:
            - type: 'null'
            - $ref: '#/components/schemas/APISchemaOpenAPIOptionsSchema'
        type:
          enum:
            - openapi
            - har
          type: string
      required:
        - type
      title: NewAPISchemaSchema
      type: object
    PaginationSchemaVulnInGroupSchema:
      properties:
        currentPage:
          type: integer
        items:
          items:
            oneOf:
              - $ref: '#/components/schemas/VulnWESchema'
              - $ref: '#/components/schemas/VulnCVESchema'
              - $ref: '#/components/schemas/VulnErrorPageSchema'
          type: array
        totalCount:
          type: integer
        totalItems:
          type: integer
      required:
        - currentPage
        - items
        - totalCount
        - totalItems
      title: PaginationSchemaVulnInGroupSchema
      type: object
    PaginationSchemaVulnPerimeterSchema:
      properties:
        currentPage:
          type: integer
        items:
          items:
            $ref: '#/components/schemas/VulnPerimeterSchema'
          type: array
        totalCount:
          type: integer
        totalItems:
          type: integer
      required:
        - currentPage
        - items
        - totalCount
        - totalItems
      title: PaginationSchemaVulnPerimeterSchema
      type: object
    ProfileCloneSchema:
      properties:
        groupUUID:
          oneOf:
            - type: 'null'
            - format: uuid
              type: string
      required: [ ]
      title: ProfileCloneSchema
      type: object
    ProfileCreateSchema:
      properties:
        baseProfileUUID:
          format: uuid
          type: string
        groupUUID:
          format: uuid
          type: string
        name:
          maxLength: 50
          type: string
        params:
          $ref: '#/components/schemas/ProfileParamsSchema'
      required:
        - baseProfileUUID
        - groupUUID
        - name
        - params
      title: ProfileCreateSchema
      type: object
    ProfileFullInfoSchema:
      properties:
        group:
          $ref: '#/components/schemas/GroupShortInfoSchema'
        isDeleted:
          type: boolean
        name:
          type: string
        params:
          $ref: '#/components/schemas/ProfileParamsSchema'
        type:
          enum:
            - fast
            - full
            - optimal
            - authcheck
            - custom
            - system
          type: string
        uuid:
          format: uuid
          type: string
      required:
        - group
        - isDeleted
        - name
        - params
        - type
        - uuid
      title: ProfileFullInfoSchema
      type: object
    ProfileParamsSchema:
      properties:
        blacklist:
          oneOf:
            - type: 'null'
            - items:
                $ref: '#/components/schemas/ValidationSchema'
              type: array
        crawlingType:
          enum:
            - smart
            - full_crawling_mode
            - null
          type:
            - 'null'
            - string
        customHeaders:
          oneOf:
            - type: 'null'
            - items:
                $ref: '#/components/schemas/HeaderSchema'
              type: array
        delayBetweenRequests:
          oneOf:
            - type: 'null'
            - type: number
        modules:
          oneOf:
            - type: 'null'
            - items:
                type: string
              type: array
        proxy:
          oneOf:
            - type: 'null'
            - $ref: '#/components/schemas/ProxySchema'
        raw:
          oneOf:
            - type: 'null'
            - type: object
        scanScope:
          enum:
            - domain
            - folder
            - path
            - base_domain
            - subdomain
            - null
          type:
            - 'null'
            - string
        whitelist:
          oneOf:
            - type: 'null'
            - items:
                $ref: '#/components/schemas/ValidationSchema'
              type: array
        workers:
          oneOf:
            - type: 'null'
            - maximum: 50.0
              minimum: 1.0
              type: integer
      required: [ ]
      title: ProfileParamsSchema
      type: object
    ProfileShortInfoSchema:
      properties:
        group:
          oneOf:
            - type: 'null'
            - $ref: '#/components/schemas/GroupShortInfoSchema'
        isDeleted:
          type: boolean
        name:
          type: string
        type:
          enum:
            - fast
            - full
            - optimal
            - authcheck
            - custom
            - system
          type: string
        uuid:
          type: string
      required:
        - group
        - isDeleted
        - name
        - type
        - uuid
      title: ProfileShortInfoSchema
      type: object
    ProfileUpdateSchema:
      properties:
        name:
          oneOf:
            - type: 'null'
            - maxLength: 50
              type: string
        params:
          oneOf:
            - type: 'null'
            - $ref: '#/components/schemas/ProfileParamsSchema'
      required: [ ]
      title: ProfileUpdateSchema
      type: object
    ProfilesConflicts:
      examples:
        - sites:
            - dYhLnYSBmewrlWGgyqPD
      properties:
        sites:
          examples:
            - - PJfvSvPROLrARwDcwziu
          items:
            examples:
              - uHUplpaRjanyUsSWZEIC
            type: string
          type: array
      required:
        - sites
      title: ProfilesConflicts
      type: object
    ProxyAuthSchema:
      properties:
        password:
          type: string
        username:
          type: string
      required:
        - password
        - username
      title: ProxyAuthSchema
      type: object
    ProxySchema:
      properties:
        auth:
          oneOf:
            - type: 'null'
            - $ref: '#/components/schemas/ProxyAuthSchema'
        host:
          type: string
        port:
          maximum: 65535.0
          minimum: 0.0
          type: integer
        type:
          enum:
            - http
            - https
            - http_no_connect
            - socks4
            - socks5
            - socks5h
            - transparent
          type: string
      required:
        - host
        - port
        - type
      title: ProxySchema
      type: object
    RawCookieInfoSchema:
      properties:
        cookies:
          items:
            type: string
          type: array
        regexpOfSuccess:
          type: string
        successUrl:
          type: string
      required:
        - cookies
        - regexpOfSuccess
        - successUrl
      title: RawCookieInfoSchema
      type: object
    RawCookieSchema:
      properties:
        cookies:
          items:
            minLength: 1
            type: string
          type: array
        regexpOfSuccess:
          minLength: 3
          type: string
        successUrl:
          minLength: 1
          type: string
      required:
        - cookies
        - regexpOfSuccess
        - successUrl
      title: RawCookieSchema
      type: object
    RoleAttributeDescriptionSchema:
      examples:
        - limits: vmoGjgxiHQOyswaLrqex
          permissions: EuTJmBVBFdzxuvECziwY
      properties:
        limits:
          examples:
            - JIgNZYFcagWptUqCwdER
          type: string
        permissions:
          examples:
            - ilvbzQIBShDtFfOfiPXw
          type: string
      required: [ ]
      title: RoleAttributeDescriptionSchema
      type: object
    RolesListSchema:
      properties:
        roles:
          items:
            enum:
              - basic_api_token
              - service_api_token
              - admin
              - manager
              - guest
              - basic_unregistered_user
              - basic_unverified_user
              - basic_verified_user
              - moderator
              - operator
              - auditor
            type: string
          type: array
      required:
        - roles
      title: RolesListSchema
      type: object
    ScanInfoSharedSchema:
      properties:
        apiProfile:
          oneOf:
            - type: 'null'
            - $ref: '#/components/schemas/APIProfileShortInfoSchema'
        authentication:
          oneOf:
            - type: 'null'
            - $ref: '#/components/schemas/AuthSettingsInfoSchema'
        createdAt:
          oneOf:
            - type: 'null'
            - format: date-time
              type: string
        duration:
          type: number
        errorReason:
          oneOf:
            - type: 'null'
            - type: string
        finishedAt:
          oneOf:
            - type: 'null'
            - format: date-time
              type: string
        kbVersion:
          oneOf:
            - type: 'null'
            - type: string
        perimeterScan:
          $ref: '#/components/schemas/VulnPerimeterInfoSchema'
        profile:
          oneOf:
            - type: 'null'
            - $ref: '#/components/schemas/ProfileShortInfoSchema'
        progress:
          type: integer
        score:
          oneOf:
            - type: 'null'
            - maximum: 10.0
              minimum: 1.0
              type: number
        startedAt:
          oneOf:
            - type: 'null'
            - format: date-time
              type: string
        status:
          enum:
            - created
            - sent_start_task
            - started
            - sent_stop_task
            - stopped
            - finished
          type: string
        uuid:
          type: string
        vulnStats:
          $ref: '#/components/schemas/VulnerabilitiesSchema'
      required:
        - apiProfile
        - authentication
        - createdAt
        - duration
        - errorReason
        - finishedAt
        - kbVersion
        - perimeterScan
        - profile
        - progress
        - score
        - startedAt
        - status
        - uuid
        - vulnStats
      title: ScanInfoSharedSchema
      type: object
    ScanQueueProfilesSchema:
      properties:
        apiProfile:
          oneOf:
            - type: 'null'
            - $ref: '#/components/schemas/APIProfileShortInfoSchema'
        authStatus:
          enum:
            - not_checked
            - checking
            - success
            - failed
          type: string
        authentication:
          oneOf:
            - type: 'null'
            - $ref: '#/components/schemas/AuthSettingsInfoSchema'
        createdAt:
          format: date-time
          type: string
        duration:
          type: number
        errorReason:
          oneOf:
            - type: 'null'
            - type: string
        finishedAt:
          oneOf:
            - type: 'null'
            - format: date-time
              type: string
        kbVersion:
          oneOf:
            - type: 'null'
            - type: string
        perimeterScan:
          $ref: '#/components/schemas/VulnPerimeterInfoSchema'
        profile:
          $ref: '#/components/schemas/ProfileShortInfoSchema'
        progress:
          type: integer
        queuePosition:
          oneOf:
            - type: 'null'
            - type: integer
        score:
          oneOf:
            - type: 'null'
            - maximum: 10.0
              minimum: 1.0
              type: number
        startedAt:
          oneOf:
            - type: 'null'
            - format: date-time
              type: string
        status:
          enum:
            - created
            - sent_start_task
            - started
            - sent_stop_task
            - stopped
            - finished
          type: string
        uuid:
          type: string
        vulnStats:
          $ref: '#/components/schemas/VulnerabilitiesSchema'
      required:
        - apiProfile
        - authStatus
        - authentication
        - createdAt
        - duration
        - errorReason
        - finishedAt
        - kbVersion
        - perimeterScan
        - profile
        - progress
        - queuePosition
        - score
        - startedAt
        - status
        - uuid
        - vulnStats
      title: ScanQueueProfilesSchema
      type: object
    SharedLinkChangeSchema:
      properties:
        emails:
          oneOf:
            - type: 'null'
            - items:
                type: string
              type: array
        ttl:
          enum:
            - 3
            - 24
            - 168
            - 720
            - 4320
            - null
          type:
            - 'null'
            - integer
      required: [ ]
      title: SharedLinkChangeSchema
      type: object
    SharedLinkCreateSchema:
      properties:
        emails:
          oneOf:
            - type: 'null'
            - items:
                type: string
              type: array
        ttl:
          enum:
            - 3
            - 24
            - 168
            - 720
            - 4320
            - null
          type:
            - 'null'
            - integer
      required: [ ]
      title: SharedLinkCreateSchema
      type: object
    SharedLinkSchema:
      properties:
        emails:
          oneOf:
            - type: 'null'
            - items:
                type: string
              type: array
        uuid:
          type: string
        validTo:
          oneOf:
            - type: 'null'
            - format: date-time
              type: string
      required:
        - emails
        - uuid
        - validTo
      title: SharedLinkSchema
      type: object
    SharedReadInfoSchema:
      properties:
        validTo:
          oneOf:
            - type: 'null'
            - format: date-time
              type: string
      required:
        - validTo
      title: SharedReadInfoSchema
      type: object
    SignInUrlSchema:
      properties:
        url:
          type: string
      required:
        - url
      title: SignInUrlSchema
      type: object
    SiteAuthCheckedSchema:
      properties:
        siteName:
          type: string
        siteUuid:
          type: string
        succeeded:
          type: boolean
      required:
        - siteName
        - siteUuid
        - succeeded
      title: SiteAuthCheckedSchema
      type: object
    SiteCreateSchema:
      properties:
        apiProfileUUID:
          oneOf:
            - type: 'null'
            - format: uuid
              type: string
        authenticationUUID:
          oneOf:
            - type: 'null'
            - format: uuid
              type: string
        groupUUID:
          format: uuid
          type: string
        name:
          oneOf:
            - type: 'null'
            - maxLength: 50
              minLength: 1
              type: string
        profileUUID:
          oneOf:
            - type: 'null'
            - format: uuid
              type: string
        url:
          type: string
      required:
        - groupUUID
        - url
      title: SiteCreateSchema
      type: object
    SiteInfoSharedSchema:
      properties:
        createdAt:
          format: date-time
          type: string
        name:
          type: string
        url:
          type: string
        uuid:
          type: string
      required:
        - createdAt
        - name
        - url
        - uuid
      title: SiteInfoSharedSchema
      type: object
    SiteScanInfoSharedSchema:
      properties:
        scan:
          $ref: '#/components/schemas/ScanInfoSharedSchema'
        shared:
          $ref: '#/components/schemas/SharedReadInfoSchema'
        site:
          $ref: '#/components/schemas/SiteInfoSharedSchema'
      required:
        - scan
        - shared
        - site
      title: SiteScanInfoSharedSchema
      type: object
    SiteSchema:
      properties:
        apiProfile:
          oneOf:
            - type: 'null'
            - $ref: '#/components/schemas/APIProfileShortInfoSchema'
        authStatus:
          enum:
            - not_checked
            - checking
            - success
            - failed
          type: string
        authentication:
          oneOf:
            - type: 'null'
            - $ref: '#/components/schemas/AuthSettingsInfoSchema'
        createdAt:
          format: date-time
          type: string
        group:
          $ref: '#/components/schemas/GroupShortInfoSchema'
        lastScan:
          oneOf:
            - type: 'null'
            - $ref: '#/components/schemas/ScanQueueProfilesSchema'
        name:
          type: string
        profile:
          $ref: '#/components/schemas/ProfileShortInfoSchema'
        requestFullScanStatus:
          enum:
            - pending
            - accepted
            - rejected
            - null
          type:
            - 'null'
            - string
        url:
          type: string
        uuid:
          format: uuid
          type: string
        verified:
          type: boolean
      required:
        - apiProfile
        - authStatus
        - authentication
        - createdAt
        - group
        - lastScan
        - name
        - profile
        - requestFullScanStatus
        - url
        - uuid
        - verified
      title: SiteSchema
      type: object
    SiteSetSettingsSchema:
      properties:
        apiProfileUUID:
          oneOf:
            - type: 'null'
            - format: uuid
              type: string
        authenticationUUID:
          oneOf:
            - type: 'null'
            - format: uuid
              type: string
        name:
          oneOf:
            - type: 'null'
            - maxLength: 50
              minLength: 1
              type: string
        profileUUID:
          oneOf:
            - type: 'null'
            - format: uuid
              type: string
        url:
          oneOf:
            - type: 'null'
            - type: string
      required: [ ]
      title: SiteSetSettingsSchema
      type: object
    SiteSettingsInfoSchema:
      properties:
        apiProfile:
          oneOf:
            - type: 'null'
            - $ref: '#/components/schemas/APIProfileShortInfoSchema'
        authentication:
          oneOf:
            - type: 'null'
            - $ref: '#/components/schemas/AuthSettingsInfoSchema'
        name:
          type: string
        profile:
          $ref: '#/components/schemas/ProfileShortInfoSchema'
        url:
          type: string
      required:
        - apiProfile
        - authentication
        - name
        - profile
        - url
      title: SiteSettingsInfoSchema
      type: object
    SiteValidationSchema:
      properties:
        groupUUID:
          format: uuid
          type: string
        url:
          maxLength: 255
          type: string
      required:
        - groupUUID
        - url
      title: SiteValidationSchema
      type: object
    SystemRolePermissionsSchema:
      properties:
        name:
          enum:
            - basic_api_token
            - service_api_token
            - admin
            - manager
            - guest
            - basic_unregistered_user
            - basic_unverified_user
            - basic_verified_user
            - moderator
            - operator
            - auditor
          type: string
        permissions:
          items:
            type: string
          type: array
      required:
        - name
        - permissions
      title: SystemRolePermissionsSchema
      type: object
    UpdateAPIProfileSchema:
      properties:
        apiSchemas:
          oneOf:
            - type: 'null'
            - items:
                format: uuid
                type: string
              maxItems: 1
              minItems: 1
              type: array
        name:
          oneOf:
            - type: 'null'
            - type: string
      required: [ ]
      title: UpdateAPIProfileSchema
      type: object
    UserMappingSchema:
      properties:
        email:
          items:
            maxLength: 50
            minLength: 1
            type: string
          type: array
        firstname:
          items:
            maxLength: 50
            minLength: 1
            type: string
          type: array
        id:
          items:
            maxLength: 50
            minLength: 1
            type: string
          type: array
        lastname:
          items:
            maxLength: 50
            minLength: 1
            type: string
          type: array
        username:
          items:
            maxLength: 50
            minLength: 1
            type: string
          type: array
      required:
        - email
        - firstname
        - id
        - lastname
        - username
      title: UserMappingSchema
      type: object
    UserProfileCreateSchema:
      properties:
        email:
          type: string
        firstname:
          maxLength: 50
          type: string
        lastname:
          maxLength: 50
          type: string
        password:
          maxLength: 256
          minLength: 8
          type: string
      required:
        - email
        - firstname
        - lastname
        - password
      title: UserProfileCreateSchema
      type: object
    UserProfileInfoGroupRoleSchema:
      properties:
        baseRole:
          enum:
            - basic_api_token
            - service_api_token
            - admin
            - manager
            - guest
            - basic_unregistered_user
            - basic_unverified_user
            - basic_verified_user
            - moderator
            - operator
            - auditor
          type: string
        createdAt:
          format: date-time
          type: string
        email:
          type: string
        firstname:
          type: string
        lastname:
          type: string
        role:
          enum:
            - basic_api_token
            - service_api_token
            - admin
            - manager
            - guest
            - basic_unregistered_user
            - basic_unverified_user
            - basic_verified_user
            - moderator
            - operator
            - auditor
          type: string
        source:
          enum:
            - local
            - ldap
            - oauth
            - saml
            - oidc
          type: string
        uuid:
          type: string
      required:
        - baseRole
        - createdAt
        - email
        - firstname
        - lastname
        - role
        - source
        - uuid
      title: UserProfileInfoGroupRoleSchema
      type: object
    UserProfileInfoGroupsSchema:
      properties:
        baseRole:
          enum:
            - basic_api_token
            - service_api_token
            - admin
            - manager
            - guest
            - basic_unregistered_user
            - basic_unverified_user
            - basic_verified_user
            - moderator
            - operator
            - auditor
          type: string
        createdAt:
          format: date-time
          type: string
        email:
          type: string
        firstname:
          type: string
        groups:
          items:
            $ref: '#/components/schemas/GroupRoleInfoSchema'
          type: array
        lastname:
          type: string
        uuid:
          type: string
      required:
        - baseRole
        - createdAt
        - email
        - firstname
        - groups
        - lastname
        - uuid
      title: UserProfileInfoGroupsSchema
      type: object
    UserProfileInfoSchema:
      properties:
        baseRole:
          enum:
            - basic_api_token
            - service_api_token
            - admin
            - manager
            - guest
            - basic_unregistered_user
            - basic_unverified_user
            - basic_verified_user
            - moderator
            - operator
            - auditor
          type: string
        createdAt:
          format: date-time
          type: string
        email:
          type: string
        firstname:
          type: string
        isConfirmed:
          type: boolean
        isRegistered:
          type: boolean
        lastname:
          type: string
        source:
          enum:
            - local
            - ldap
            - oauth
            - saml
            - oidc
          type: string
        uuid:
          type: string
      required:
        - baseRole
        - createdAt
        - email
        - firstname
        - isConfirmed
        - isRegistered
        - lastname
        - source
        - uuid
      title: UserProfileInfoSchema
      type: object
    UserProfileInviteAnonymSchema:
      properties:
        email:
          type: string
      required:
        - email
      title: UserProfileInviteAnonymSchema
      type: object
    UserProfileInviteSchema:
      properties:
        email:
          type: string
        groupUUID:
          format: uuid
          type: string
        password:
          oneOf:
            - type: 'null'
            - maxLength: 256
              minLength: 8
              type: string
        passwordChangeRequired:
          oneOf:
            - type: 'null'
            - type: boolean
        role:
          enum:
            - basic_api_token
            - service_api_token
            - admin
            - manager
            - guest
            - basic_unregistered_user
            - basic_unverified_user
            - basic_verified_user
            - moderator
            - operator
            - auditor
          type: string
      required:
        - email
        - groupUUID
        - role
      title: UserProfileInviteSchema
      type: object
    UserProfilePasswordSelfSetSchema:
      properties:
        newPassword:
          maxLength: 256
          minLength: 8
          type: string
        oldPassword:
          maxLength: 256
          minLength: 8
          type: string
      required:
        - newPassword
        - oldPassword
      title: UserProfilePasswordSelfSetSchema
      type: object
    UserProfileSelfUpdateSchema:
      properties:
        firstname:
          maxLength: 50
          type: string
        lastname:
          maxLength: 50
          type: string
      required:
        - firstname
        - lastname
      title: UserProfileSelfUpdateSchema
      type: object
    UserProfileSystemRoleSchema:
      properties:
        role:
          enum:
            - basic_api_token
            - service_api_token
            - admin
            - manager
            - guest
            - basic_unregistered_user
            - basic_unverified_user
            - basic_verified_user
            - moderator
            - operator
            - auditor
          type: string
      required:
        - role
      title: UserProfileSystemRoleSchema
      type: object
    UserProfileUpdateSchema:
      properties:
        email:
          type: string
        firstname:
          maxLength: 50
          type: string
        lastname:
          maxLength: 50
          type: string
        password:
          oneOf:
            - type: 'null'
            - maxLength: 256
              minLength: 8
              type: string
      required:
        - email
        - firstname
        - lastname
      title: UserProfileUpdateSchema
      type: object
    UserRoleSchema:
      properties:
        role:
          enum:
            - basic_api_token
            - service_api_token
            - admin
            - manager
            - guest
            - basic_unregistered_user
            - basic_unverified_user
            - basic_verified_user
            - moderator
            - operator
            - auditor
            - null
          type:
            - 'null'
            - string
        uuid:
          format: uuid
          type: string
      required:
        - uuid
      title: UserRoleSchema
      type: object
    UserUUIDSchema:
      properties:
        user_uuid:
          format: uuid
          type: string
      required:
        - user_uuid
      title: UserUUIDSchema
      type: object
    ValidationSchema:
      properties:
        type:
          enum:
            - wildcard
            - regexp
            - string
          type: string
        value:
          type: string
      required:
        - type
        - value
      title: ValidationSchema
      type: object
    VulnAppSchema:
      properties:
        name:
          type: string
        type:
          oneOf:
            - type: 'null'
            - type: string
        url:
          type: string
        version:
          oneOf:
            - type: 'null'
            - type: string
      required:
        - name
        - type
        - url
        - version
      title: VulnAppSchema
      type: object
    VulnAppsSchema:
      properties:
        apps:
          items:
            $ref: '#/components/schemas/VulnAppSchema'
          type: array
      required:
        - apps
      title: VulnAppsSchema
      type: object
    VulnCVEApprovedSchema:
      properties:
        cveId:
          type: string
        cvss:
          type: number
        cvssVector:
          type: string
        matches:
          oneOf:
            - type: 'null'
            - items:
                type: string
              type: array
        requestRaw:
          oneOf:
            - type: 'null'
            - type: string
        responseRaw:
          oneOf:
            - type: 'null'
            - type: string
        title:
          type: string
      required:
        - cveId
        - cvss
        - cvssVector
        - matches
        - requestRaw
        - responseRaw
        - title
      title: VulnCVEApprovedSchema
      type: object
    VulnCVEDescriptionSchema:
      properties:
        cveId:
          type: string
        cvssScore:
          type: number
        cvssVector:
          type: string
        description:
          type: string
        link:
          type: string
      required:
        - cveId
        - cvssScore
        - cvssVector
        - description
        - link
      title: VulnCVEDescriptionSchema
      type: object
    VulnCVESchema:
      properties:
        cveId:
          type: string
        cvss:
          type: number
        cvssVector:
          type: string
        title:
          type: string
        uuid:
          type: string
      required:
        - cveId
        - cvss
        - cvssVector
        - title
        - uuid
      title: VulnCVESchema
      type: object
    VulnCategoryLocaleSchema:
      properties:
        name:
          enum:
            - sensitive_data
            - security_headers
            - access_control
            - cryptography
            - injection
            - insecure_design
            - security_misconfiguration
            - cve
            - tech_info
          type: string
        tooltip:
          type: string
      required:
        - name
        - tooltip
      title: VulnCategoryLocaleSchema
      type: object
    VulnErrorPageSchema:
      properties:
        code:
          type: integer
        request:
          type: object
        response:
          oneOf:
            - type: 'null'
            - type: object
        url:
          type: string
        uuid:
          type: string
      required:
        - code
        - request
        - response
        - url
        - uuid
      title: VulnErrorPageSchema
      type: object
    VulnGroupSchema:
      properties:
        categoryLocaleKey:
          enum:
            - sensitive_data
            - security_headers
            - access_control
            - cryptography
            - injection
            - insecure_design
            - security_misconfiguration
            - cve
            - tech_info
          type: string
        count:
          type: integer
        groupTitle:
          type: string
        issueType:
          enum:
            - apps
            - cve
            - error_page
            - issue
          type: string
        requestKey:
          oneOf:
            - type: 'null'
            - type: string
        severity:
          enum:
            - high
            - medium
            - low
            - info
          type: string
        suspicionCount:
          default: 0
          type: integer
        vulnerability:
          oneOf:
            - $ref: '#/components/schemas/VulnAppsSchema'
            - $ref: '#/components/schemas/VulnCVESchema'
            - $ref: '#/components/schemas/VulnCVEApprovedSchema'
            - $ref: '#/components/schemas/VulnErrorPageSchema'
            - $ref: '#/components/schemas/VulnWESchema'
      required:
        - categoryLocaleKey
        - count
        - groupTitle
        - issueType
        - requestKey
        - severity
        - vulnerability
      title: VulnGroupSchema
      type: object
    VulnMatchesSchema:
      properties:
        foundData:
          items:
            type: string
          type: array
      required:
        - foundData
      title: VulnMatchesSchema
      type: object
    VulnPerimeterInfoSchema:
      properties:
        enabled:
          type: boolean
        portsCount:
          type: integer
      required:
        - enabled
        - portsCount
      title: VulnPerimeterInfoSchema
      type: object
    VulnPerimeterSchema:
      properties:
        ports:
          items:
            $ref: '#/components/schemas/VulnPortSchema'
          type: array
        subdomain:
          type: string
      required:
        - ports
        - subdomain
      title: VulnPerimeterSchema
      type: object
    VulnPortSchema:
      properties:
        description:
          type: string
        ip:
          type: string
        port:
          type: integer
        severity:
          enum:
            - high
            - medium
            - low
            - info
          type: string
      required:
        - description
        - ip
        - port
        - severity
      title: VulnPortSchema
      type: object
    VulnWESchema:
      properties:
        channel:
          oneOf:
            - type: 'null'
            - $ref: '#/components/schemas/ChannelSchema'
        confidence:
          enum:
            - vuln
            - suspicion
          type: string
        createdAt:
          format: date-time
          type: string
        falsePositive:
          type: boolean
        fixed:
          type: boolean
        matches:
          oneOf:
            - type: 'null'
            - $ref: '#/components/schemas/VulnMatchesSchema'
        requestRaw:
          oneOf:
            - type: 'null'
            - type: string
        responseRaw:
          oneOf:
            - type: 'null'
            - type: string
        responseTime:
          type: number
        severity:
          enum:
            - high
            - medium
            - low
            - info
          type: string
        starred:
          type: boolean
        urlFull:
          oneOf:
            - type: 'null'
            - type: string
        urlRel:
          type: string
        uuid:
          type: string
        vector:
          oneOf:
            - type: 'null'
            - type: string
      required:
        - channel
        - confidence
        - createdAt
        - falsePositive
        - fixed
        - matches
        - requestRaw
        - responseRaw
        - responseTime
        - severity
        - starred
        - urlFull
        - urlRel
        - uuid
        - vector
      title: VulnWESchema
      type: object
    VulnerabilitiesSchema:
      properties:
        high:
          $ref: '#/components/schemas/VulnerabilityStatSchema'
        info:
          $ref: '#/components/schemas/VulnerabilityStatSchema'
        low:
          $ref: '#/components/schemas/VulnerabilityStatSchema'
        medium:
          $ref: '#/components/schemas/VulnerabilityStatSchema'
      required:
        - high
        - info
        - low
        - medium
      title: VulnerabilitiesSchema
      type: object
    VulnerabilityStatSchema:
      properties:
        fixed:
          type: integer
        real:
          type: integer
      required:
        - fixed
        - real
      title: VulnerabilityStatSchema
      type: object
tags: []
